Received: from postoffice2.mail.cornell.edu (postoffice2.mail.cornell.edu [132.236.56.10])
	by sundial.cs.cornell.edu (8.11.3/8.11.3/M-3.10) with ESMTP id gACHIDQ01184
	for <egs@cs.cornell.edu>; Tue, 12 Nov 2002 12:18:13 -0500 (EST)
Received: from gourry.cornell.edu (pit089.cs.cornell.edu [128.84.223.189])
	by postoffice2.mail.cornell.edu (8.9.3/8.9.3) with ESMTP id MAA00928
	for <egs@cs.cornell.edu>; Tue, 12 Nov 2002 12:17:57 -0500 (EST)
Message-Id: <5.1.0.14.2.20021112120846.01a8ee80@postoffice2.mail.cornell.edu>
X-Sender: pj39@postoffice2.mail.cornell.edu (Unverified)
X-Mailer: QUALCOMM Windows Eudora Version 5.1
Date: Tue, 12 Nov 2002 12:17:56 -0500
To: egs@CS.Cornell.EDU
From: Piyoosh Jalan <pj39@cornell.edu>
Subject: 615 PAPER 63
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed

The small-world phenomenon: An algorithmic perspective
P2P and the small world phenomena
A Measurement Study of Peer-to-Peer File Sharing Systems

This time we are asked to read the above three papers and give comments for 
the below two questions.

Can unstructured P2P systems perform as well as, or better than, more 
structured P2P networks ?

The Small-World Phenomenon paper by Kleinberg discusses the small world 
phenomenon. He presents it with an algorithmic approach and proves all the 
theorems proposed in the paper algorithmically. Small world phenomenon 
means that any two nodes in a network is likely to be connected through a 
short sequence of intermediate acquaintances. According to the survey by 
Prof. Milgram of Harvard it took a median of 5.5 intermediaries to connect 
two arbitrary nodes(people in this case). Kleinbergs paper states that a 
class of networks exhibit the small world phenomenon if the network is 
divided into both local and long range contacts and not just one extreme. 
The local contacts are the nodes nearest neighbors and  long range contacts 
are formed with edges having uniform random end points. Thus to summarize 
this paper states that a random unstructured decentralized network which 
resembles an unstructured P2P system can find short paths if it has both 
local and long range contacts. The second paper which is a chapter from the 
Oreilly P2P book supports this fact by presenting detailed simulation 
results for Freenet and Gnutella. Freenet and Gnutella both being 
decentralized P2P systems (ie unstructured) portrays small world phenomenon 
among nodes. Thus unstructured P2P systems do have the ability to perform 
as well as more structured systems.


What are the design constraints of P2P systems (e.g. typical system 
lifetimes, bandwidths, etc.) ?

There are a number of design constraints of P2P systems that need to be 
considered. The important ones being

- Bandwidth of hosts: This is the speed of the connection of the peer to 
the network. This information can either be asked when the user registers 
to the network ie the type of connection they are using (Cable, LAN, MODEM 
etc) or could be calculated.
- System lifetimes of a host: The duration that peer choose to remain 
connected to the infrastructure has implication for the degree of 
redundancy necessary to keep data or index meta data highly available. Thus 
to delegate a task to a peer the system must know if its suitable to do so 
based on its availability, latency, bandwidth and other factors. A peer can 
be in three possible state during its entire lifetime ie offline, inactive 
and active.
- Latency: Round trip latency between peers. The nodes acting as a server 
should have the characteristics of High-Bandwidth and low latency. Moreover 
to fit a high bandwidth server a node must have a high upstream bottleneck 
link bandwidth.
- Availability: Servers apart from high bandwidth and low latency should 
also have high availability. This is important to decide upon the degree of 
replication necessary.
- Free Riding: The system has to consider free riders who does not share 
any files themselves thus causing a bottleneck at nodes that share files. 
There could be an incentive to share files such as nodes that share files 
have preference to download files from a node with limited bandwidth and 
allowed number of users thus creating contention among nodes. Taking care 
of free riding also helps in load balancing.
- Fault Tolerance: The ability of the system to perform under random 
failures of nodes and in the face of attacks.

Some other design constraints that need to be considered are
- Population of end user hosts that participate in the system
- Degree of cooperation between hosts
- Degree of sharing
- Scalability: One of the design constraints that need to be addressed is 
scalability if the system is to be scaled to a global level.


