Received: from exchange.cs.cornell.edu (exchange.cs.cornell.edu [128.84.97.8])
	by sundial.cs.cornell.edu (8.11.3/8.11.3/M-3.10) with ESMTP id gACJ6OQ03364
	for <egs@popsrv.cs.cornell.edu>; Tue, 12 Nov 2002 14:06:24 -0500 (EST)
content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="utf-8"
X-MimeOLE: Produced By Microsoft Exchange V6.0.6249.0
Subject: 615 PAPER 63
Date: Tue, 12 Nov 2002 14:06:24 -0500
Message-ID: <706871B20764CD449DB0E8E3D81C4D4302CEE6F3@opus.cs.cornell.edu>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: 615 PAPER 63
Thread-Index: AcKKfpgsu1XIm5ApTl+K1+AWkVn1CA==
From: "Hongzhou Liu" <liuhz@CS.Cornell.EDU>
To: "Gun Sirer" <GunSirer@CS.Cornell.EDU>
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from base64 to 8bit by sundial.cs.cornell.edu id gACJ6OQ03364

  Three papers are presented today. Jon Kleinberg's paper introduces the small world 
phenomenon and summarizes some previous work in the area. While previous work focuses on
the question: why should there exist short chains of acquaintances linking together 
arbitrary pairs of strangers, this paper is intent to answer another question: why 
should arbitrary pairs of strangers be able to find such short chains. The paper defines
an infinite family of random network modles that simulates a small world and  proves 
that in most cases, decentralized algorithms are unable to find such short chains 
effectively and that only in a unique modle within this family, decentralized algorithms
are effective and are able to find such short chains in O(log n) time(where n is the 
number of nodes in the network), which may be the best routing performance we can expect
in a p2p system. Thus unstructured p2p systems, if designed carefully, can perform at 
least as well as structured p2p system with respect to routing performace. 
  The O'Reilly P2P book also investigates the small world model and compares two p2p 
systems, Freenet and Gnutella, which can be considers two instances of the small world
model. As expected, both Freenet and Gnutella are able to deliver messages any pair of 
nodes in the systems using a short path. However, there are still some differences 
between these two systems. The lookup path length in Gnutella is shorter than that in 
Freenet, because Gnutella uses BFS search. Gnutella, however, has a much higher overhead
than Freenet, because is uses broadcast to flood queries and queries are forwarded by 
nodes if they can meet the queries in their local store. Broadcasting property also 
limits Gnutella's scalability because broadcast in a large network requires high 
bandwidth. The paper suggests to modify Gnutella to a hierarchical model to improve its
scalability which will harm Gnutella's autonomy in some degree of course. Thus here we 
can see another tradeoff between structured and unstructureed p2p systems. Structured 
systems can guarrantee that lookup scales logarithmically, however, it implies a 
considerable loss of autonomy promised by peer-to-peer.Regarding scalability,
unstructured p2p systmes can perform as well as structured systems and they can 
outperform structured systems in self-organization. This paper also compares Freenet and 
Gnutella's performance with respect to fault tolerance. The paper states that Freenet
behaves better under dandom failure, but Gnutella can better cope with targeted attacks.
However, the paper make an unreasonable assumption here. That is the attacker is able to
locate nodes with high links in Freenet easily and thus start attacks on them. The 
localiztion of these nodes, however I think, should be very difficult given Freenet's 
anonymity schems. Such targeted attacks requires some efforts in Freenet.
  The paper from UW evalutes two popular peer-to-peer file sharing system in various 
aspects. The measurement in this paper shows there is siginificant hereroneneity and 
lack of cooperation across peers prticipating in these systems, which, however, is  
noticed by few currect(relative to the paper) peer-to-peer architectures.The paper also
points some general guides that each p2p systems designer should pay attention to:
  -The set of nodes in p2p systems is heterogeneous with respect to many characteristics
:bandwidth, latency, lifetime, shared data and etc. P2P systems should delegate 
different degrees of responsibility to different nodes, based on the hosts' physical 
characteristics and the degree of trust or reliability. 
  -Lots of peers in the P2P systems have a quite short lifetime, typically less than one 
hour. P2P system should be self-adaptive to the changes in the system. 
  -A large fraction of peers in the system can be dishonest. They may, for example, mis
-report they bandwidth for their own benefits. Thus P2P systems should have the ability
to measure these data itself.
  -Lots of nodes in the P2P systems are free riders. P2P systems should have some 
schemes that can exclude these free riders and encourage nodes to provide their own 
resources to the system.

