Received: from beloit.edu (beloit.edu [144.89.40.1])
	by aleve.media.mit.edu (8.8.7/ML970927) with ESMTP id NAA03742
	for <handyboard@media.mit.edu>; Thu, 11 Jun 1998 13:53:19 -0400 (EDT)
Received: from [144.89.80.16] ([144.89.80.16]) by beloit.edu (AIX4.2/UCB 8.7/8.7) with ESMTP id MAA06646; Thu, 11 Jun 1998 12:51:22 -0500 (CDT)
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Message-Id: <v04011700b1a5d624cf56@[144.89.80.16]>
Date: Thu, 11 Jun 1998 12:52:54 -0600
To: handyboard@media.mit.edu, dkumar@blackcat.brynmawr.edu
From: Michael Goldweber <goldwebm@beloit.edu>
Subject: Multi-tasking under IC (Freeware version)

I am somewhat new to handyboards and IC, so bear with me if this issue has
been dealt with before.  (I did check the FAQ and "some" of this list's
archives prior to posting.)

Under IC (the freeware version) cooperating processes communicate using
shared global memory.  What is the standard method (under IC) for
preventing race conditions?

One could "hog" the processor prior to entering a critical section and then
release the processor when concluded; but this seems inelegant.

Feel free to email me directly or post to the list.

Thanks in advance for any assistance,



Michael Goldweber               Associate Professor of Computer Science
                                Beloit College
email: mikeyg@beloit.edu        Dept. of Math and Computer Science
phone: (608) 363-2071           700 College St.
fax: (608) 363-2052             Beloit, WI 53511-5595
http://cs.beloit.edu/~mikeyg/

