Received: from lugnet.com (lugnet.com [209.68.63.236])
	by aleve.media.mit.edu (8.9.3/8.9.3/+ALEVE) with ESMTP id NAA12061
	for <handyboard@media.mit.edu>; Tue, 11 Jul 2000 13:16:09 -0400 (EDT)
Received: (from lugnet@localhost) by lugnet.com (8.9.1/8.6.12) id NAA15726; Tue, 11 Jul 2000 13:16:09 -0400 (EDT)
X-Envelope-To: handyboard@media.mit.edu
X-Loop: lugnet.robotics.handyboard@lugnet.com
X-Message-Archive: http://www.lugnet.com/news/display.cgi?lugnet.robotics.handyboard:7942
From: "Robert Kelly" <Robert_kelly@fceinc.com>
X-Real-Life-Name: Robert Kelly
Sender: news-gateway@lugnet.com
Errors-To: news-errors@lugnet.com
To: handyboard@media.mit.edu
Subject: Robot positioning
Posted-Date: Tue, 11 Jul 2000 17:15:41 GMT
Date: Tue, 11 Jul 2000 17:15:41 GMT
Organization: none
Message-Id: <FxJMM5.Bzx@lugnet.com>
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Precedence: list

Hello all,

I am currently building a H board/exp board based robot that has (will have)
the following sensors:

Diffrential drive wheel encoders, hamamatsu sensors combined with the software
from the H board site for motor control and distance counts for each wheel.
45" wheels with at least 64 clicks per revolution resolution.

Sonar mounted on pan/tilt head

5 GP2D12 sensors; four at each quadrant, non-movable and one mounted beside
the above sonar on the pan/tilt mechanism

Vector 2x

Eltec 440 sensor

light sensors

My goal is to produce a robot, that among other things, can wander aimlessly
(or locate a specific point or object or whatever) and after a specific time
or other interrupt, return to its starting point. I want to do it in such a
way as to not have to lay out a grid in memory or otherwise load a world model
of some sort. I would like to be able to give the 'bot a mission, let it go
and when the 'bot determines that it is finished, return to "base".

The problem is, I have'nt the foggiest idea of how to accomplish this. I am
not a math person and am not sure how to work the required x/y positioning
calculations into the code/navigation algorithms.

Questions:
Can anyone tell me if my sensor suite is adequate for, at minimum, rough
autonomous positioning?

Can anyone point me in the right direction for detailed coding or mathematical
information on the web for dealing with these types of calculations?

Can any of you fine folks give me some pointers on how to accomplish my goals?

Thanks alot,

Bob K.

