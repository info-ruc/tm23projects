Received: from psuvax1.cse.psu.edu ([130.203.2.4]) by groucho.cse.psu.edu with SMTP id <3007>; Tue, 8 Feb 1994 12:36:28 -0500
Received: from lore.plan9.cs.su.oz.au ([129.78.96.2]) by psuvax1.cse.psu.edu with SMTP id <292643>; Tue, 8 Feb 1994 12:17:59 -0500
From:	geoff@plan9.cs.su.oz.au
Date:	Tue, 8 Feb 1994 11:57:05 -0500
To:	<9fans@cse.psu.edu>
Subject: ping... ping... ping...
Message-Id: <94Feb8.121759est.292643@psuvax1.cse.psu.edu>

Some survey-type questions for non-Bell p9 sites...

Out there, who is actually gotten p9 running? (that is, you've
got a distribution and you've installed it and gotten a
usable system up and running)

Of those, how many still have their Plan 9 partition/machine?

Of those, how many log onto it regularly, or use it as their 
system of choice?

How about configurations - who is using what? SPARCS? x86's?
Dedicated file servers? WORM drives?

If a Plan 9 archive site opened, would you want to use 9P
to talk to it, or FTP? What would you want to upload? What
would you want to see there?

How many people at your site use Plan 9? How many
develop or do research on it? What are they doing?

Of particular interest would be development work - I think
we should have a better idea of what the rest of the world
is doing, to avoid messy duplication.

Post your answers or mail them to me, and I'll strip out
locations/identities if you don't want to publish to the
world that you're running a system that
1) has a user `none' that can be accessed from anywhere, and
2) can listen to a Ethernet promiscuously
Oops - that just slipped out. I'm not trying to give bozos
ideas (you can't telnet in as none from outside our department
anyway) but some better way of controlling access to the
`none' account better be dreamed up (not everyone has the
luxury of a firewalled system). Grumph.

Another random question while I'm on - are there any good,
high-speed point-to-point interfaces to hook up PC's at a
fairly short distance (say 0.5m)? It strikes me that most
networks are overkill for linking a file server and cpu
server, given that they are designed for many hosts and
fairly large distances. Neither of these factors apply to
a cpu/fs link. A cheap solution to the above would be
appreciated.

Geoff.


