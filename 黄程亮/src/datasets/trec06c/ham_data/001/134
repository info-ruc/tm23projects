Received: from psuvax1.cse.psu.edu ([130.203.2.4]) by groucho.cse.psu.edu with SMTP id <3007>; Wed, 9 Feb 1994 07:09:18 -0500
Received: from minster.york.ac.uk ([144.32.128.41]) by psuvax1.cse.psu.edu with SMTP id <292145>; Wed, 9 Feb 1994 06:54:29 -0500
Message-ID: <swordfish.760794862@minster.york.ac.uk>
X-Sender: pete@minster.york.ac.uk
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Date:	Wed, 9 Feb 1994 06:42:17 -0500
To:	scott@cs.ust.hk (Scott Deerwester)
From:	pete@minster.york.ac.uk (Pete Fenelon)
Subject: Re: Sam and emacs
Cc:	9fans@cse.psu.edu
X-Mailer: <PC Eudora Version 1.4>

>I'm really hesitant to bring this up...  but the main barrier to me to
>making Plan 9 my major environment is the disdain for emacs.  I
>*really* appreciate having an editor that is programmable down to its
>bones, in something like a real programming language.

Ugh. An editor is for editing text files. A programming language is for
writing programs. Never the twain shall meet, ideally.

>It's not that
>I'm addicted to left-meta-shift-coke bottle style interfaces, but...
>I really don't understand the "this page intentionally left blank"
>attitude.  I mean, the fact that you can build things like ange-ftp
>and WWW mode is *really* nice!  How do accomodate the same sort of
>thing in sam?

You don't. Read Rob's papers on Help, and Acme. He's built environments in
which text and programs interact (relatively) seamlessly, and instead of a 
monolithic (or do I mean neolithic :-)) environment like emacs, you have 
small, neat, integrated tools.


>And I don't know how to function without emacs' gdb
>mode!  The fact that the editor itself can put me at the line where
>the music stopped, and I've got a full honest-to-God editor under me
>without having to go, "Uh.. lessee.. that was line 136 in file
>blurfle.c..".  And when I recompile, I have all of the error messages
>in a buffer, and need two keystrokes per syntax error (which adds up
>if you've got enough syntax errors ;-) to page through them and fix
>them -- again, with a real editor.
>

Again, you should read Rob's paper on Help, which shows a wonderful example
of debugging -- he shows how to track a bug down to an individual line in a 
source file without even typing one character...

>And then there's guess-indent mode that does about as good a job as I
>can at figuring out where I probably wanted the cursor after the line
>wraps, and abbrev mode, which now auto-corrects all of my most common
>typos -- watching somebody's face when I type "taht " and they see the
>"a" and the "h" switch places as soon as I hit the space is kind of
>fun.

This is pretty much a matter of taste. You can probably hack autoindent
into Sam if you want it; but as far as auto-correction goes I prefer "what 
you type is what you get"... I don't like the editor messing around with my 
input!

>
>There's lots that I don't like about emacs, but the fact that it's
>*programmable* means that my productivity as a programmer and generic
>computer professional is about an order of magnitude higher than it
>would have been if I didn't have it.
>

>The most common complaint that I hear about emacs is that there are
>too many blasted things to learn -- and the learning curve *is* really
>steep.  But that doesn't seem to be the reason for the intentional
>blank page in the Plan 9 manual.  Would somebody please enlighten me?
>

There are some Good Things in the emacs philosophy -- multiple
buffers, powerful regular expressions, a fairly reasonable text-selection 
mechanism, etc. In fact, many of the things I like about Sam!

However, there are also some Very Bad Lurking Horrors in it -- particularly 
the use of Lisp as  implementation/extension language, and the sheer bulk of 
"modern" emacs.

all subjective,
Pete
--
Peter Fenelon: Research Associate: High Integrity Systems Engineering Group, 
Dept of Computer Science, University of York, York, Y01 5DD +44/0 904 433388
Email:pete@minster.york.ac.uk *There's no room for enigmas in built up areas


