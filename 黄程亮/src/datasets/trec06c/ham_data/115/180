Received: from authusersmtp.mail.cornell.edu (granite1.mail.cornell.edu [128.253.83.141])
	by sundial.cs.cornell.edu (8.11.7-20031020/8.11.7/M-3.22) with ESMTP id k1N6uCt23161
	for <egs+summary@cs.cornell.edu>; Thu, 23 Feb 2006 01:56:12 -0500 (EST)
Received: from [10.0.1.2] (cpe-69-207-41-159.twcny.res.rr.com [69.207.41.159])
	(authenticated bits=0)
	by authusersmtp.mail.cornell.edu (8.13.1/8.12.10) with ESMTP id k1N6uBKL023631
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
	for <egs+summary@cs.cornell.edu>; Thu, 23 Feb 2006 01:56:12 -0500 (EST)
Mime-Version: 1.0 (Apple Message framework v746.2)
Content-Transfer-Encoding: 7bit
Message-Id: <E0CB1CCE-E562-4117-B211-BCA18EA79EE2@cornell.edu>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
To: egs+summary@cs.cornell.edu
From: Philip Kuryloski <pjk25@cornell.edu>
Subject: PAPER 9
Date: Thu, 23 Feb 2006 01:58:57 -0500
X-Mailer: Apple Mail (2.746.2)

A MEASUREMENT STUDY OF PEER-TO-PEER FILE SHARING SYSTEMS

The authors produce a survey of the characteristics of peers in both  
the Napster and Gnutella file sharing networks.  In order to achieve  
this, they crawl each network to obtain a list of peers, and then use  
that list to scan and test peers in the network.  The napster crawl  
was performed by obtaining a list of popular files from the web,  
querying the napster network, and recording hosts with copies of the  
file.  The Gnutella crawler would use the Gnutella protocol to flood  
the network with ping messages to gather hostnames.

Once a list of peers had been generated, number of shared files, ping  
latency, uptime or lifetime, and bandwidth to the internet was  
measured for individual peers.  Distribution of peers across DNS  
domains was also measured.  They find that very few peers server like  
high bandwidth (> 3Mbps) connections, and that a significant portion  
of peers have very low bandwidth modem grade connections.  Also,  
upstream bandwidth is typically lower than downstream bandwidth.   
They note that latencies in the Gnutella network vary greatly due to  
the unstructured nature of the network.  In terms of uptime, Napster  
peers have significantly higher availability than Gnutella peers,  
although no network has a large number of peers with server-like  
uptime (93% +).  There are also a large number of freeloading users  
in both networks, and a significant number of users who misreport  
their bandwidth.

Based on these findings, the authors derive several suggestions for  
p2p network designers.  The great variation in peers suggests that  
systems should delegate different levels of responsibility to  
different peers.  Also, the system should do it's best to measure  
peer capability rather than rely on peer supplied values, as these  
are often misreported.


MEASUREMENT, MODELING, AND ANALYSIS OF A PEER-TO-PEER FILE-SHARING  
WORKLOAD

This work focuses around a 200 day trace of Kazaa traffic.  The  
authors begin by generally classifying aspects of this traffic as  
compared to web traffic.  They find that web traffic is driven by the  
dynamic nature of pages, while Kazaa traffic is generated by the  
introduction of new content and by users entering and leaving the  
system.  Generally this is due to the immutable nature of typical  
Kazaa content, where users are likely to download an item once, as  
opposed to a webpage they may visit repeatedly.  The also find that  
Kazaa users are extremely patient with content requests, unlike web  
page requests.  Another interesting finding is that users request  
less content as they age in the system.  In terms of content on the  
network, there are three natural classifications, small (< 10MB),  
medium (10-100MB), and large (>100MB).  The majority of the requests  
are for small files, however large files generate the most traffic  
overall.  Also, popularity for objects is short lived, although less  
so for large files than small.  However, older objects receive more  
requests overall than new ones.  Finally, they note that the  
popularity of Kazaa objects does not follow the same Zif distribution  
as Web objects.

The authors also suggest that locality-aware routing, mainly forming  
distributed local caches to reduce overall network traffic.  The most  
popular objects are replicated more often.

In both papers, the authors find that p2p networks are often a far  
cry from the homogeneous set of nodes envisioned as the substance of  
the network.  In fact, peers vary greatly in capacity, as does object  
popularity.  Most importantly, the types of objects transferred in  
p2p networks is quite different from that of the web.  In essence, a  
p2p network is highly dynamic, and this is the most notable design  
challenge and stress upon the network, not due to it's content, but  
instead due to the peers itself.

