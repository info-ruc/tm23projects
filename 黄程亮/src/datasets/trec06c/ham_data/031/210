Received: from imo11.mx.aol.com (imo11.mx.aol.com [198.81.17.1])
	by aleve.media.mit.edu (8.9.1a/8.9.1/+ALEVE) with ESMTP id HAA30031
	for <handyboard@media.mit.edu>; Wed, 13 Jan 1999 07:48:17 -0500 (EST)
From: FThompson9@aol.com
Received: from FThompson9@aol.com
	by imo11.mx.aol.com (IMOv18.1) id 1THVa04297
	 for <handyboard@media.mit.edu>; Wed, 13 Jan 1999 07:47:11 -0500 (EST)
Message-Id: <4ae09e49.369c95cf@aol.com>
Date: Wed, 13 Jan 1999 07:47:11 EST
To: handyboard@media.mit.edu
Mime-Version: 1.0
Subject: Re: motor ports
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Mailer: AOL 3.0 16-bit for Windows sub 58

Russell,
     Just a suggestion from experience.  Before you invest a lot of time
developing hardware to expand the capability of the Handy Board, I suggest you
write the program.  Just "stub out" the motors you don't have with dummy
subroutines, or for more accurate timing, remap those calls to the existing
motor ports.  Your goal is to see if the program that you write can control
all the motors in your design in a timely maner.  I call this the easy part
since you should already have everything you need for it (the Handy Board, and
IC).  I once built a Z-80 robot controller whith hardware to implement the
full 256 I/O ports.  I then wrote software to control the speed of two drive
wheels using pulse width modulation.  I didn't have much of a hardware timer
(just a free running hardware clock), so my control program used 75% of the
CPU time just controling those two motors.  I didn't have enough time for the
big job of planning what those motors were to do (where the robot goes).  I
have since learned PIC programming.

Hope this saves time
Pherd

