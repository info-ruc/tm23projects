Received: from pop.styria.com (root@[195.12.208.100])
	by aleve.media.mit.edu (8.8.7/ML970927) with ESMTP id DAA13855
	for <handyboard@media.mit.edu>; Sat, 4 Apr 1998 03:48:23 -0500 (EST)
Received: from styria.com ([192.168.109.31])
	by pop.styria.com (8.8.8/8.8.7) with ESMTP id KAA10207
	for <handyboard@media.mit.edu>; Sat, 4 Apr 1998 10:48:16 +0200
Message-Id: <3525F401.E82547EF@styria.com>
Date: Sat, 04 Apr 1998 10:49:05 +0100
From: "E. Baeck" <erwin.baeck@styria.com>
X-Mailer: Mozilla 4.03 [en] (Win95; I)
Mime-Version: 1.0
To: handyboard@media.mit.edu
Subject: CONFIG of 68HC11E2
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Hi to all !

Yesterday, I sent a very interesting text of a motorola application
concerning the problem with the CONFIG reg of the 68HC811E2.
Unfortunately, there is no reaction til today from anybody. This
application says, that the CONFIG of the "E2" display in the bootstrap
mode NOT the real value ("1"s instead of "0"s). Now I have a robot
controller board MRC11 (Novatronik/Mekatronix, HC11, 64kb RAM) with a
"E2" (unfortunately, I don't have another type in this time) and try to
install the IC 3.2 on it (I've ordered a Handyboard but this has a
delivery time of 2-3 weeks to Europe). The problem is, that the HBDL
loader checks the CONFIG value and read the value 0xFF instead of 0x0C
(see above). Is there a solution for this problem ? I have another
question, concerning the download of the Pcoder: when I load the in
bootstrap mode, where is this Pcode interpreter after the download ? In
bootstrap mode there is only the internal memory active (not the
external RAM) and this is too less for the loader (17kb), isn't it ?
Please can anybody explain me this process (loading of the Pcoder +
switch to Expanded multiplexed mode) ?

Thanks.

Here a second time the application note concerning the CONFIG reg of the
"E2":

AS-79 APPLICATION SNAPSHOT

PROBLEMS PROGRAMMING THE CONFIG REGISTER OF THE MC68HC811E2 ON THE
MC68HC11EVM
by Janet M. Snyder

INTRODUCTION

Special considerations exist when programming the CONFIG register of the
MC68HC811E2 on the MC68HC11EVM, hereafter referred to as the EVM board.
The procedure is the same as for any other part, and the programming
will take place, but it may not show up as having changed values.

GENERAL INFORMATION

The monitor of the EVM board must be revision 2.5 or later. Earlier
versions of the monitor kept the chip in bootstrap mode during a read of
the CONFIG register. Versions 2.5 and later solved this problem by
reading the CONFIG register in special test mode. For reference, the
currentrevision of the monitor in the EVM board is revision 3.0.

The problem manifested itself in these earlier versions of the monitor
by showing that the contents of the CONFIG register had not changed
after programming and performing a reset. It was due to the fact that in
bootstrap mode, the value of the MC68HC811E2 forces some bits to ones,
no matter what the value that was just programmed into it. It actually
programmed correctly, but there was no way to see it. The bits that are
forced to ones in bootstrap mode are 0 (EEON), 1 (nothing), and 4, 5, 6,
and 7 (EE0, EE1, EE2, and EE3 respectively). For applications where the
security option was not included, bit 3 would also always show as a one,

and if the COP timeout was not used, that bit (bit 2)would also be a
one. So, a common scenario of the failure would be an application where
the designer wished to reprogram the CONFIG register to turn off the
EEPROM, but no matter how many times the bit was attempted to be
programmed to a zero and then reset, the CONFIG register would always
read $FF.

Greetings to all (from Austria)

Erwin





