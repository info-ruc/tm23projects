Received: from iago.cs.cornell.edu (iago.cs.cornell.edu [128.84.96.10])
	by sundial.cs.cornell.edu (8.11.7-20031020/8.11.7/M-3.25) with ESMTP id k3PG8A205702
	for <egs+summary@cs.cornell.edu>; Tue, 25 Apr 2006 12:08:10 -0400 (EDT)
Received: from postoffice10.mail.cornell.edu ([132.236.56.14]) by iago.cs.cornell.edu with Microsoft SMTPSVC(6.0.3790.1830);
	 Tue, 25 Apr 2006 12:07:07 -0400
Received: from webmail.cornell.edu (hermes21.mail.cornell.edu [132.236.56.20])
	by postoffice10.mail.cornell.edu (8.12.10/8.12.6) with ESMTP id k3PG75OU020412
	for <egs+summary@cs.cornell.edu>; Tue, 25 Apr 2006 12:07:05 -0400 (EDT)
Received: from 128.84.98.90
        by webmail.cornell.edu with HTTP;
        Tue, 25 Apr 2006 12:07:06 -0400 (EDT)
Message-ID: <1097.128.84.98.90.1145981226.squirrel@webmail.cornell.edu>
Date: Tue, 25 Apr 2006 12:07:06 -0400 (EDT)
Subject: paper 24
From: "Abhishek Santosh Gupta" <asg46@cornell.edu>
To: egs+summary@cs.cornell.edu
User-Agent: SquirrelMail/1.4.5
MIME-Version: 1.0
Content-Type: text/plain;charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Priority: 3 (Normal)
Importance: Normal
X-OriginalArrivalTime: 25 Apr 2006 16:07:07.0144 (UTC) FILETIME=[4CE04080:01C66882]

CLUSTER COMPUTING...

deals with harnessing idle compute cycles throughout the Internet.
this must include the following activities:
overlay management for hosts distributing cycles,resource discovery within
the overlay, application based scheduling,local scheduling and meta-level
scheduling

resource discovery becomes difficult when the resource(compute cycles) is
perishable,cannot be shared and is dynamic.
4 search techniques were examined : expanding ring, advertisement based,
random walk and rendezvous point. Rendezvous point performed better under
light loads and outperformed others when message passing overheads were
compared.


the authors identify 4 classes of problems
1) infinite workpile applications that consume a huge amount of compute
time under a master-slave model.
no communication is required b/w slave nodes.
2) workpile applications with deadlines are deadline-driven but the
compute cycles required are moderate.
3) tree based search applications require substantial compute cycles with
loose coordination among

subtasks. e.g. communicating a bound in a search tree
4) Point-of-Presence applications consume minimal cycles but require
placement throughout the Internet.
e.g. distributed monitoring applications.



the authors suggest a wave scheduler which uses a CAN-based DHT.
time zones are represented by a d-dimensional mesh. each zone represents a
particular night zone.

the joining node has the freedom to choose its night zone.

when morning comes to a host node, it selects a new target night zone,
randomly selects a node in that night zone for migration, and after
negotiation the task is migrated to the new zone.

results may be returned to the application or stored in the DHT file
system and retrieved using DHT lookup.

the trust value for each node is determined using a quizzing mechanism.
this trust value is used to

select a node for a particular task.





