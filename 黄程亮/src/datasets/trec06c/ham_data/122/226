Received: from iago.cs.cornell.edu (iago.cs.cornell.edu [128.84.96.10])
	by sundial.cs.cornell.edu (8.11.7-20031020/8.11.7/M-3.25) with ESMTP id k3P5a6202931
	for <egs+summary@cs.cornell.edu>; Tue, 25 Apr 2006 01:36:06 -0400 (EDT)
Received: from authusersmtp.mail.cornell.edu ([128.253.83.141]) by iago.cs.cornell.edu with Microsoft SMTPSVC(6.0.3790.1830);
	 Tue, 25 Apr 2006 01:35:05 -0400
Received: from [10.0.1.3] (cpe-69-207-37-155.twcny.res.rr.com [69.207.37.155])
	(authenticated bits=0)
	by authusersmtp.mail.cornell.edu (8.13.1/8.12.10) with ESMTP id k3P5Z5bZ016681
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
	for <egs+summary@cs.cornell.edu>; Tue, 25 Apr 2006 01:35:05 -0400 (EDT)
Resent-Message-Id: <6F5A542A-94D5-4099-B427-AF3324151F59@cornell.edu>
Mime-Version: 1.0 (Apple Message framework v749.3)
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
Resent-Date: Tue, 25 Apr 2006 01:35:23 -0400
Message-Id: <5808CDF1-3318-4BA2-9111-074F30940627@cornell.edu>
Content-Transfer-Encoding: 7bit
Resent-To: egs+summary@cs.cornell.edu
From: Philip Kuryloski <pjk25@cornell.edu>
Subject: PAPER 24
Resent-From: Philip Kuryloski <pjk25@cornell.edu>
Date: Tue, 25 Apr 2006 01:15:38 -0400
To: egs+summary@cs.cornell.edu
X-Mailer: Apple Mail (2.749.3)
X-OriginalArrivalTime: 25 Apr 2006 05:35:06.0043 (UTC) FILETIME=[022370B0:01C6682A]

CLUSTER COMPUTING ON THE FLY:

The authors propose a distributed P2P system which attempts to  
schedule the use of client machines throughout the internet at night  
in their local timezone using an overlay network.  Participating  
hosts are quizzed to evaluate the level at which they can be trusted  
as members of the cycle sharing network.  The system handles all  
aspects of scheduling at both the global and local level, which the  
authors call generally a "P2P Scheduling System".

The authors see four broad classes of applications:  infinite  
workpile, deadline driven workpile, tree based search, and point of  
presence, all off which they attempt to handle.  These essentially  
reflect different degrees of coordination between donating nodes.   
The primary disparity between traditional grid computing and P2P  
clustering is that there is an implied amount of trust or value in  
the jobs being submitted (otherwise users would not participate).  In  
an open system, such guarantees are not implicit.  Furthermore, there  
is potentially less confidence or trust in other participating  
nodes.  Also, there is potentially a much larger variation in the  
resources needed by particular jobs, making management, finding, and  
scheduling of resources more difficult.  CCOF handles this via  
quizzing of hosts.  Scheduling is handled by the Wave Scheduler,  
named because it follows the local nighttime around the globe  
continuously, tracking nodes via a CAN DHT.  Nodes forward workload  
to a random neighbor in the next time zone, causing a surge of  
activity to the next time zone.

Although the potential to donate cycles in exchange for access to a  
global supercomputer sounds promising, CCOF is not without certain  
shortcomings.  Primarily, it is difficult for the average user to  
generate a task which can run in a manner that sees benefit from such  
a computing resource.  Thus, it is difficult to see a strong personal  
computational benefit from participating in such a system.  Also, the  
cause which I donate to is now less identifiable and less trustable.   
The systems primary method of scheduling relies on using nighttime  
cycles.  I have difficulty believing that this accurately reflects  
the availability of resources.  Also, the system mentions reliance on  
a centralized certificate authority to authenticate system members,  
making in not truly P2P.

