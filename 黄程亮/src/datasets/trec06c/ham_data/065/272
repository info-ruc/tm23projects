Received: from imo-d05.mx.aol.com (imo-d05.mx.aol.com [205.188.157.37])
	by aleve.media.mit.edu (8.9.3/8.9.3/+ALEVE) with ESMTP id WAA10284
	for <handyboard@media.mit.edu>; Tue, 11 Apr 2000 22:17:03 -0400 (EDT)
From: FThompson9@aol.com
Received: from FThompson9@aol.com
	by imo-d05.mx.aol.com (mail_out_v25.3.) id k.a8.39ad7f2 (4072);
	Tue, 11 Apr 2000 22:16:18 -0400 (EDT)
Message-Id: <a8.39ad7f2.26253672@aol.com>
Date: Tue, 11 Apr 2000 22:16:18 EDT
Subject: Re: about robots and handy board
To: FrancoisA.DuToit@sanlam.co.za, handyboard@media.mit.edu
Mime-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Mailer: AOL 4.0 for Windows 95 sub 61

Dear Francois A du Toit:
    PIC stands for Programmable Integrated Circuit.  Generally it is what we 
call a microcontroller.  You write a program in Assembler, burn that program 
into the PICs EPROM or EEPROM.  Then when you put the PIC in its circuit, it 
runs the program.  Most of the pins on the PIC are inputs or outputs.  (Which 
they are, is determined by the program you write, and can be changed mid 
program.)  The pins which are not I/O are power, ground, reset, and two pins 
for the crystal oscillator circuit.  To a small extent a chip with power 
applied and a crystal attached is like a Handy Board.  Both expect the 
external world to supply electrical input, and both using a program apply an 
electrical output to the world in response to the input signals.  There I 
would say the similarity stops.  The could be thought of as a 
Microcontroller, but in the Handy board, it is really being used as a 
microprocessor.  The program that you write for the Handy board is stored on 
a memory chip outside the 6811.  The signals from the 6811 are conditioned on 
the Handy board to be more useful to simple robots.  With a PIC the program 
is burned into ROM and will not go away until it is physically erased with UV 
light or special voltages.  The Handy board will loose the program when power 
is removed (it's not as easy as it sounds), or when you tell the Handy board 
to forget (unload) the program.
    The primary advantage to the Handy board is that it is easy to use.  You 
write the programs in C in an interactive environment directly connected to 
the Handy board itself.  Finding program errors is easy.  For small robots 
nearly no electrical conditioning of the signal is required.
    The primary advantage to the PIC is that it is cheap.  You would use a 
PIC processor if you plan to make a dozen or more identical robots.  Signal 
conditioning is almost certainly required.  Finding program errors is 
anywhere from nontrivial to very difficult.
    When I was in St. Louis, I build a line following robot based on stepper 
motors (to demonstrate stepper control to the club [MARS]) and a PIC 
microcontroller.  It took me more than two months to build, program, and fix. 
 It finally did make it all the way around a simple line course, but at a 
very slow speed.  Rick Moll snapped together a line follower over a weekend 
using the Handy board and modified servo motors.  It followed the line quite 
well at a speed that put my stepper motors to shame.
    If you are trying to learn about robots, get the Handy board!

    You can learn everything you need to know about PICs (except what is 
available in Senix parts) at their web page.

http://www.microchip.com/

    For more info. on the Handy board try:

http://lcs.www.media.mit.edu/groups/el/projects/handy-board/index.html

Hope this helps,
Pherd
Currently Pensacola, FL



