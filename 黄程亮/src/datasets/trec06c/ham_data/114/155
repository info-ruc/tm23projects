Received: from postoffice10.mail.cornell.edu (postoffice10.mail.cornell.edu [132.236.56.14])
	by sundial.cs.cornell.edu (8.11.7-20031020/8.11.7/M-3.22) with ESMTP id k1EG2Rt13525
	for <egs+summary@cs.cornell.edu>; Tue, 14 Feb 2006 11:02:27 -0500 (EST)
Received: from orpheus3.dataserver.cornell.edu (orpheus3.dataserver.cornell.edu [128.253.161.167])
	by postoffice10.mail.cornell.edu (8.12.10/8.12.6) with ESMTP id k1EG2Q5Y016878
	for <egs+summary@cs.cornell.edu>; Tue, 14 Feb 2006 11:02:26 -0500 (EST)
Message-ID: <654332395.1139932945940.JavaMail.webber@orpheus3.dataserver.cornell.edu>
Date: Tue, 14 Feb 2006 11:02:26 -0500 (EST)
From: Gopal Parameswaran <gp72@cornell.edu>
To: egs+summary@cs.cornell.edu
Subject: PAPER 6
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Mailer: uPortal WEB email client 3.0

In the paper "Search and replication in Unstructured Peer to Peer Networks" the authors presents
a query algorithm based on multiple random walks that resolve queries almost as quickly as 
Gnutella's flooding method while reducing the network traffic by two orders of magnitude in most cases
for decentralized, unstructured P2P systems. The main issues addressed in this paper are the issues 
of duplicate messages since as the Time To Live (TTL) is increased the number of duplicate 
messages in flooding style messages can be excessive since even though as TTL is increased
 the number of new nodes visited increases the number of visited nodes increases excessively. 
The authors suggest a random graph topology and using a random walk to search through it 
because in a random graph the duplication ratio is same as the fraction of nodes visited so far 
and is small so long as the fraction of nodes visited so far is small. An expanding ring search 
algorithm is suggested where the node starts with a small TTL and if it cannot find the object then the TTL
is increased and the process repeated. A random walk algorithm is used as said earlier.
	Random walk algorithm is good for local search and and might not give desired results for a search 
for an object that is not in close proximity and increasing the number of query messages by a factor of k
only optimises the local search and could take a long time to succeed for distant object nodes.
Also the system discussed does checking with the original requester to check if the node has already been 
traversed and not to send it to nodes that it has traversed. This approach would increase the overhead. 
It seems that the authors have picked up the flooding algorithm which is one of the most inefficient mechanisms
 of doing a search since it is a greedy search algorithm with traversal of duplicate nodes and try to 
present a solution that they claim would improve it. The authors focus on unstructured networks 
claiming that current systems that use Peer to Peer use unstructured system whereas structured 
decentralised systems are in a theoretical stage. However a random walk search is a good algorithm that
 could be applied to structured networks.
	The authors also talk about replications theory and how randomly the searched objects can be replicated
along the path of the search and uses random replication of the object instead of the random replication of the path.

