Received: from penguin.cs.cornell.edu (penguin.cs.cornell.edu [128.84.96.11])
	by sundial.cs.cornell.edu (8.11.7-20031020/8.11.7/M-3.22) with ESMTP id k3665st03123
	for <egs+summary@cs.cornell.edu>; Thu, 6 Apr 2006 02:05:54 -0400 (EDT)
Received: from xproxy.gmail.com ([66.249.82.193]) by penguin.cs.cornell.edu with Microsoft SMTPSVC(6.0.3790.1830);
	 Thu, 6 Apr 2006 02:05:54 -0400
Received: by xproxy.gmail.com with SMTP id s7so69757wxc
        for <egs+summary@cs.cornell.edu>; Wed, 05 Apr 2006 23:05:54 -0700 (PDT)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:mime-version:content-type;
        b=NFvACHwVy/tAYo+3d7OoCL6DtQFBOG3+3i/KRZPH7WUg8iOgHKCLbTjPyjhqJ/b7cQ+HNXD/Map+nZnqEIGlZLRpwS2VzEq9VjbDXROucmiYCiRxZJsysF4Vr/NivYZXc5/K5hHsxXByJ0nZtKQnapCAaILim91OnnkKEeKqh/E=
Received: by 10.70.99.4 with SMTP id w4mr708617wxb;
        Wed, 05 Apr 2006 22:37:30 -0700 (PDT)
Received: by 10.70.128.19 with HTTP; Wed, 5 Apr 2006 22:37:30 -0700 (PDT)
Message-ID: <d9ff1fa90604052237q506354dar5c67491d419dd362@mail.gmail.com>
Date: Thu, 6 Apr 2006 01:37:30 -0400
From: "Niranjan Sivakumar" <niranjan.sivakumar@gmail.com>
To: egs+summary@cs.cornell.edu
Subject: PAPER 19
MIME-Version: 1.0
X-Security: message sanitized on sundial.cs.cornell.edu
	See http://www.impsec.org/email-tools/sanitizer-intro.html
	for details. $Revision: 1.148 $Date: 2004-12-19 11:59:17-08 
X-Security: The postmaster has not enabled quarantine of poisoned messages.
Content-Type: multipart/alternative; 
	boundary="----=_Part_21850_31051359.1144301850531"
X-OriginalArrivalTime: 06 Apr 2006 06:05:54.0856 (UTC) FILETIME=[2A44AA80:01C65940]

------=_Part_21850_31051359.1144301850531
Content-Type: text/plain; charset=ISO-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Niranjan Sivakumar

Overcast:  Reliable Multicasting with an Overlay Network

Overcast is an overlay network that was designed as an alternate to network
level IP multicasting.  Overcast is designed to provide a tree-like
structure to facilitate single source multicasting in a scalable and
efficient manner.

Overcast builds a tree through by having nodes that join the network move
further and further away from the source until performance drops below a
certain threshold.  The joining node will successively contacts children of
nodes and moves down the tree if the bandwidth achieved through the childre=
n
is close to that of the parent.  In the case that bandwidths between
multiple children are similar, the closest node (in terms of network hops)
is selected.  The system is currently setup to measure bandwidth with 10K
transfers, but it is noted that this may not be the optimal solution.  Once
in the network, nodes periodically update their position by testing
bandwidth a few levels up the tree.  Since nodes maintain knowledge of node=
s
further up the tree, they can re-associate themselves in the event of a
parent or other higher level node failure.

The system also has an up/down protocol to help maintain state in the
network.  "Death" and "birth" certificates are distributed up the tree when
nodes leave the network, join, or find new parents.  Parent nodes never
initiate contact with children while children periodically check in with
parents.  Any node in the system knows the parents of all of its
descendents.  Since the root in this kind of tree is particularly
vulnerable, a simple system of linear roots is provided to provide some
extra reliability.

One of the issues seen in this system is that there could be an issue with
latency with the deep tree approach that is advocated.  This is noted to no=
t
be the metric that Overcast is considering, but it seems to be something
that could be important given that one of the main applications that
Overcast is designed to support is live broadcasting of media.  Given this
particular application, the analysis section does not seem to consider some
of the major churn that could be associated with the broadcast of something
like a live TV channel.  It seems to be reasonable to expect that a huge
number of nodes may join to obtain popular content, and that viewers would
fluctuate significantly throughout the day.  Also, it seems that load may
have been better distributed in the system if there was some mechanism to
engage nodes "across" the tree, as seen in some other multicasting systems.

------=_Part_21850_31051359.1144301850531
Content-Type: text/html; charset=ISO-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Niranjan Sivakumar<br><br>Overcast:&nbsp; Reliable Multicasting with an Ove=
rlay Network<br><br>Overcast is an overlay network that was designed as an =
alternate to network level IP multicasting.&nbsp; Overcast is designed to p=
rovide a tree-like structure to facilitate single source multicasting in a =
scalable and efficient manner.
<br><br>Overcast builds a tree through by having nodes that join the networ=
k move further and further away from the source until performance drops bel=
ow a certain threshold.&nbsp; The joining node will successively contacts c=
hildren of nodes and moves down the tree if the bandwidth achieved through =
the children is close to that of the parent.&nbsp; In the case that bandwid=
ths between multiple children are similar, the closest node (in terms of ne=
twork hops) is selected.&nbsp; The system is currently setup to measure ban=
dwidth with 10K transfers, but it is noted that this may not be the optimal=
 solution.&nbsp; Once in the network, nodes periodically update their posit=
ion by testing bandwidth a few levels up the tree.&nbsp; Since nodes mainta=
in knowledge of nodes further up the tree, they can re-associate themselves=
 in the event of a parent or other higher level node failure.&nbsp;=20
<br><br>The system also has an up/down protocol to help maintain state in t=
he network.&nbsp; &quot;Death&quot; and &quot;birth&quot; certificates are =
distributed up the tree when nodes leave the network, join, or find new par=
ents.&nbsp; Parent nodes never initiate contact with children while childre=
n periodically check in with parents.&nbsp; Any node in the system knows th=
e parents of all of its descendents.&nbsp; Since the root in this kind of t=
ree is particularly vulnerable, a simple system of linear roots is provided=
 to provide some extra reliability.&nbsp;=20
<br><br>One of the issues seen in this system is that there could be an iss=
ue with latency with the deep tree approach that is advocated.&nbsp; This i=
s noted to not be the metric that Overcast is considering, but it seems to =
be something that could be important given that one of the main application=
s that Overcast is designed to support is live broadcasting of media.&nbsp;=
 Given this particular application, the analysis section does not seem to c=
onsider some of the major churn that could be associated with the broadcast=
 of something like a live TV channel.&nbsp; It seems to be reasonable to ex=
pect that a huge number of nodes may join to obtain popular content, and th=
at viewers would fluctuate significantly throughout the day.&nbsp; Also, it=
 seems that load may have been better distributed in the system if there wa=
s some mechanism to engage nodes &quot;across&quot; the tree, as seen in so=
me other multicasting systems.
<br>

------=_Part_21850_31051359.1144301850531--

