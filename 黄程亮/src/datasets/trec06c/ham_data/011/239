Received: from ml.media.mit.edu (ml.media.mit.edu [18.85.13.107])
	by aleve.media.mit.edu (8.8.7/ML970927) with ESMTP id QAA14206
	for <handyboard@media.mit.edu>; Thu, 26 Feb 1998 16:55:50 -0500 (EST)
Received: from localhost (localhost [127.0.0.1])
	by ml.media.mit.edu (8.8.7/8.8.7) with SMTP id QAA11683;
	Thu, 26 Feb 1998 16:55:30 -0500 (EST)
Message-Id: <199802262155.QAA11683@ml.media.mit.edu>
X-Authentication-Warning: ml.media.mit.edu: localhost [127.0.0.1] didn't use HELO protocol
To: Skye Legon <slegon@watfast.uwaterloo.ca>
Cc: handyboard@media.mit.edu
Subject: Re: Sonar questions (technical ones!) 
In-Reply-To: Your message of "Wed, 25 Feb 98 16:28:05 EST."
             <199802252128.QAA24365@watfast.uwaterloo.ca> 
Date: Thu, 26 Feb 98 16:55:30 -0500
From: "Fred G. Martin" <fredm@media.mit.edu>
X-Mts: smtp

Good questions!!

> 1: The speed of sound has been widely quoted to be 0.9 ft/ms (274m/s),
>    but my Physics text lists it as 343 m/s (at 20C/70F), which is about
>    1.13 ft/ms, or 25% faster.  So why the 0.9 value (or just cuz
>    the Polaroid guys say so)?

The polaroid number/widely quoted number is 0.9 MILLISECONDS
PER FOOT -- or 1.11 ft/ms.  hence the conversion matches!

I think also I have this wrong on my HB sonar page!  This confused me
for a while too.

> 2: The sonar routines (e.g. sonar_sample()) return the distance as an
>    int, meaning the greatest round-trip distance possible is 32768 
>    half-microsecs, or 8192 microsecs one-way.  By my math, 8.2ms is
>    about 3m (10 ft).  Is this our max distance?  Any way to improve
>    this?

Yes, this is correct.  The routines would have to be smarter to deal
with longer time periods/distances.

> 3: My sonar works well, but about 10% of the time it returns a spurious
>    low value (around 2200 counts/8 inches), even if nothing has moved
>    or changed in the environment.  I have written a kludge to simply
>    re-pulse if it receives such a result, which works fine, but it's
>    ugly and I'm just treating the symptom, not the cause.  Any ideas
>    why this is?  (I'm using sonar_closeup(), BTW)

I've always chalked this up to "sonar is flaky."  i haven't
played with it enough to better characterize it.

anyone who has some more sonar experience would be welcome to
contribute observations here.

> 4: I'm confused by the guts of the sonar routines.  The start_time is
>    read from the system TCNT register as a 16-bit integer (max 32768
>    counts).  If TCNT increments 2,000,000 counts/sec, does this mean 
>    TCNT rolls over every 16ms?  If so, it seems quite likely that the
>    counter will roll over while we're waiting for a pulse to return
>    depending on when we peek it for the start_time.  However, the 
>    routines work fine, so can someone please clear up my 
>    misunderstanding?

As a 16-bit number TCNT's range is 0 to 65535, or 32.768 ms of time.
I don't think I quite understand your question here, but remember that
the actual time of TCNT when the ping returns is automatically
captured by the 6811 timer system and stored in timer 3's TIC3
register.

So while we're waiting for the return pulse, it doesn't matter how
long after it occurs that we make the calculation, b/c the value is
already captured.

Fred

