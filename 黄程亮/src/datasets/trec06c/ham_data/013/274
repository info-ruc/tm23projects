Received: from helium.tip.nl (helium.tip.nl [195.18.64.71])
	by aleve.media.mit.edu (8.8.7/ML970927) with ESMTP id QAA13280
	for <handyboard@media.mit.edu>; Wed, 1 Apr 1998 16:52:50 -0500 (EST)
Received: from nowayhose by helium.tip.nl with smtp
	(Smail3.2 #23) id m0yKVTV-001ZFiC; Wed, 1 Apr 1998 23:55:13 +0200 (MET DST)
Received: by localhost with Microsoft MAPI; Wed, 1 Apr 1998 23:57:26 +0200
Message-Id: <01BD5DC9.EBE4EC20.j.paludanus@tip.nl>
From: Jaron Paludanus <j.paludanus@tip.nl>
To: "HandyBoard (E-mail)" <handyboard@media.mit.edu>
Subject: Working with a different compiler
Date: Wed, 1 Apr 1998 23:56:11 +0200
X-Mailer: Microsoft Internet E-mail/MAPI - 8.0.0.4211
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit

Hi all,

I managed to get the TASKING (Whitesmiths) 68HC11 optimizing C compiler, 
debugger and simulator for use with the Handyboard. Thrilled at first I now 
realize I leave the safe Interactive C path and wander of in the dark. I 
would like to get some understanding of what I am doing.

I've went through the mailing list since July 96 and have not found many 
references to using the Handyboard with a different compiler then IC. I 
have the pink book, I read the HB site and the documentation that came with 
the compiler and still can't get passed the "Hello World" stage. Can 
anybody help me with general embedded programming and programming the HB in 
particular?

My first real goal to achieve is a set of routines that use measured 
velocity (using shaft-encoders) and feed this information to the motor 
drivers. Using ANSI-C I created routines that do the actual work for the 
feed-back loop but I came to the conclusion there is much more I have to 
understand first.

I played around with the compiler package, I can create a C program and 
generate a S19 file. As far as I understand the documentation, it links a 
routine that starts up a function called main() after reset. The created 
S19 file can be downloaded without problems to the handyboard using 
HBDL.EXE. I reset the board and nothing happens!

To get some feedback during my escapades with the handyboard and to learn 
the tools I would like to start of with a routine that beeps the piezo. I 
have read the tries of German Gentile but did not find an answer. 
Programming the various timers in C leaves me clueless and implementing an 
interupt driven routine is off-limits for now. So can anybody help me 
creating (or just supply <gr>) an ANSI-C routine that beeps the piezo? 
Peeks and pokes in a simple loop will do fine for me at this point.

The compiler software I have allows for intermixing assembly and C, can map 
memory locations to variables without the need of pointers (a question of 
me earlier about this is answered in this package using a special 
identifier) and has all sorts of extravagant optimizations. I have a 
debugger, monitor and simulater, capabale of code-profiling etc. and I 
can't use any of them (yet)... ;(

I don't really understand what is happening when I download a program to 
the HandyBoard. What is a bootstrap exactly? Will the programs I write 
automatically go into the 32K RAM? What happens if I switch it off - will 
my code be unusable like IC code or can I do with simple integrety 
checking?

Since I have no feedback of the board at all I am a bit stuck...
So please, is there somebody who has previous experiences and wants to help 
me out here...?

thanks, Jaron
j.paludanus@tip.nl


