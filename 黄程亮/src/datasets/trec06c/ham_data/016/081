Received: from smtp4.nwnexus.com (smtp4.nwnexus.com [206.63.63.52])
	by aleve.media.mit.edu (8.8.7/ML970927) with ESMTP id QAA05948
	for <handyboard@media.mit.edu>; Mon, 4 May 1998 16:15:44 -0400 (EDT)
Received: from e847548 (blv-lx102-ip4.nwnexus.net [206.63.41.4])
	by smtp4.nwnexus.com (8.8.8/8.8.8) with SMTP id NAA10211;
	Mon, 4 May 1998 13:15:41 -0700 (PDT)
Message-Id: <199805042015.NAA10211@smtp4.nwnexus.com>
From: "Mike Davis" <ipscone@halcyon.com>
To: cmcmanis@freegate.com
Date: Mon, 4 May 1998 13:15:54 +0000
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7BIT
Subject: Re: LCD Addressing - & - Expanded Mode
Cc: handyboard@media.mit.edu
Priority: normal
In-Reply-To: <354E0E84.2B4F64A4@freegate.com>

I found the driver you sent earlier.  Thanks.  BTW, I found out that 
my LCD is good but I still have a problem.

It appears that I cannot change my CONFIG reg.  Maybe because it is 
an 811E2; don't know.  Should be able to however.

Since the program was complaining about not being able to change the 
CONFIG and reporting that it was invalid at 0xFF, I used that value 
to trick the program (hbdl).  It worked as far as getting passed the 
check.  It downloaded the program and the IC display came up on the 
display.

Now, my problem is why can't I change the CONFIG reg?
What is the CONFIG of my MCU?

A 0xFF in CONFIG seems to have EEPROM at F800, which overlaps the 
SRAM.  The CONFIG reg should be set to maybe 0x2E but it won't 
change.

Does anyone have a solution for this?  Do I now have 32K - 2K of SRAM 
and 2K of EEPROM?  Is that a problem?  Any suggestions?


> Date:          Mon, 04 May 1998 11:52:52 -0700
> From:          Chuck McManis <cmcmanis@freegate.com>
> Reply-to:      cmcmanis@freegate.com
> Organization:  FreeGate Corporation
> To:            Mike Davis <ipscone@halcyon.com>
> Cc:            handyboard@media.mit.edu
> Subject:       Re: LCD Addressing - & - Expanded Mode

> >From the driver code I recently sent out:
>  * LCD Connections on the Handyboard
>  *	PORTB bit 0 - R/W
>  *	PORTB bit 1 - RS (Register Select, 0 = instruction)
>  *	PORTC 8 bits of Data
>  *	PORTA bit 4 - E clock
> 
> Mike Davis wrote:
> > Does this mean that the LCD is NOT memory mapped?
> 
> That is correct, the LCD is NOT memory mapped, it is connected
> directly to the pins on the 68HC11 that become ports A, B, and C
> in "single chip" mode.
> 
> > Do I first have to write to Port B then write to Port A, to clock 
> > it.
> 
> That is correct.
> Something like:
> 	Write B
> 	Write C (this is your data)
> 	Write the clock high
> 	NOP
> 	Write the clock low
> (The NOP is to insure the timing requirements of the LCD are met,
> you can leave it out but it can screw up when the LCD is cold)
> 
> > This must mean that I have to go into and out of expanded mode to 
> > use both the LCD and the SRAM?  That's kinda wierd.
> 
> Not exactly, it means the SRAM is unavailable to you when you are
> in single chip mode, however there is at least 256 bytes of RAM
> addressed at address 0 that is available (its inside the
> processor). It's not "kinda" weird, it is very, very weird. 
>  
> > Anything else you can point me to as far as addressing the LCD and
> > accessing SRAM via assembly code?
> 
> Other than the source I sent out? Not really. Note that you can't
> address SRAM easily in single chip mode. I suspect it is possible
> but it is much easier to copy stuff from SRAM into the first 256
> bytes before you switch into single chip mode.
> 
> --Chuck
> 
--
-----------------------------------------------------------------
ipscone@halcyon.com                                 Shoot-To-Win!

Protect the 2nd Amendment!               Your rights may be next!
-----------------------------------------------------------------

