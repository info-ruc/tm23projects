Received: from smtp2.andrew.cmu.edu (SMTP2.ANDREW.CMU.EDU [128.2.10.82])
	by aleve.media.mit.edu (8.9.1a/8.9.1/+ALEVE) with ESMTP id AAA06365
	for <handyboard@media.mit.edu>; Mon, 5 Jul 1999 00:41:30 -0400 (EDT)
Received: from sparkle.res.cmu.edu (SPARKLE.RES.CMU.EDU [128.2.145.196])
	by smtp2.andrew.cmu.edu (8.9.3/8.9.3) with ESMTP id AAA03339
	for <handyboard@media.mit.edu>; Mon, 5 Jul 1999 00:41:29 -0400 (EDT)
Date: Mon, 05 Jul 1999 00:41:28 -0400
From: Andrea M Okerholm <amo@andrew.cmu.edu>
Reply-To: Andrea M Okerholm <amo@andrew.cmu.edu>
To: handyboard@media.mit.edu
Subject: servo timing
Message-Id: <19200134.3140124088@sparkle.res.cmu.edu>
Originator-Info: login-token=Mulberry:01dMN6GtUw6VqpR/ujuf/dhP0x6Fm2LP3p8d9+uw==;
 token_authority=postmaster@andrew.cmu.edu
X-Mailer: Mulberry (MacOS) [1.4.1, s/n S-100002]
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Hi all, I have an interesting problem with the servo routines. I am using
them to control a speed control. From the IC command line, I am able to
control the ESC (and hence the motor) perfectly. From a simple test
program, I can also do this. But when I try to control the motor from a
program that is also monitoring the serial port, the motor twitches when
commanded to stop. It has been suggested to me that this is because the
infinite loop that is monitoring the serial port is taking up too much
system time and thus messing up the servo waveform. I have heard that the
expansion board has servo outputs with their own timing element that would
solve my problem, but when I looked at the schematics of the expansion
board it looked to me like the clock inputs all go to the handyboard. Does
anyone have a suggestion?

Thanks,
Andrea

