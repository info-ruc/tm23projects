Received: from mvp.net (root@Walden.mo.Net [209.96.2.52])
	by aleve.media.mit.edu (8.8.7/ML970927) with ESMTP id OAA23512
	for <handyboard@media.mit.edu>; Tue, 28 Jul 1998 14:34:12 -0400 (EDT)
Received: from mvp.net (DialIP5-345.mvp.net [209.96.71.91])
	by mvp.net (8.8.8/8.8.8) with ESMTP id NAA10925
	for <handyboard@media.mit.edu>; Tue, 28 Jul 1998 13:53:51 -0500 (CDT)
Message-Id: <35BE19FF.D3AD6540@mvp.net>
Date: Tue, 28 Jul 1998 13:35:43 -0500
From: Rick Moll <rickmoll@mvp.net>
X-Mailer: Mozilla 4.04 [en] (WinNT; I)
Mime-Version: 1.0
To: handyboard <handyboard@media.mit.edu>
Subject: Re: IC Floating Point Bug
References: <35BD1471.E858A353@mvp.net> <35BE0EE0.DA0113CF@cs.umt.edu>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Will Bain wrote:

> I get the same results with version 3.2.  Curiously, if I remove the
> last digit in the a = 1.570796 statement (or replace it with a zero),
> then I get the correct answer.  I guess it has something to do with
> specifying too many significant digits in a floating point literal.
> Very strange.

If you notice, the constant is PI/2.  If you add more significant digits
you can even get "a/b" to become 0.5, that is twice the correct answer
rather than half of it!!!

The reason the bug concerns me so much is that since "a" and "b" print out
correctly, it does *not* appear to be a problem with compiling the
literal.  That is, it appears that if that value happened to occur as a
result of some prior calculation, you would get the same wrong result.

Rick


