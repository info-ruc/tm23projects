Received: from imo12.mx.aol.com (imo12.mx.aol.com [152.163.225.2])
	by aleve.media.mit.edu (8.9.3/8.9.3/+ALEVE) with ESMTP id MAA16637
	for <handyboard@media.mit.edu>; Thu, 11 May 2000 12:04:06 -0400 (EDT)
From: FThompson9@aol.com
Received: from FThompson9@aol.com
	by imo12.mx.aol.com (mail_out_v26.7.) id y.99.4aa7438 (4558)
	 for <handyboard@media.mit.edu>; Thu, 11 May 2000 12:03:44 -0400 (EDT)
Message-Id: <99.4aa7438.264c33e0@aol.com>
Date: Thu, 11 May 2000 12:03:44 EDT
Subject: Re: Household Positioning System  Re: DGPS
To: handyboard@media.mit.edu
Mime-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Mailer: AOL 4.0 for Windows 95 sub 100

> Cool idea.  Do you have it working?  Or do you have a schematic that is
>  somewhat working?  If so, I want to test out how accurate it will be.  It
>  will be fun to use the LED as landmarks in the building.
>  

    No design, just an idea.  The way I see it, you put a "Head" on the top 
of your robot.  It has three sensors mounted for tilt and pan.  The easiest 
way I can see it is to use gear head stepper motors with a "Home" switch to 
point the thing.  The Handy board issues step and direction pulses out a 
parallel port to a stepper controller chip.  The tilt motor mounts to the 
shaft of the pan motor.  Ribbon cable runs from the fixet frame to the moving 
stepper and the sensor set.  Mounted to the shaft of the tilt motor is a box. 
 inside the box at one end is a group of four "remote control sensors."  
These are available from lots of places (Radio shack, BGMicro).  You give 
them 5 volts and ground and they respond with a digital output "I see it."  
These four outputs goto digital inputs on the handy board.  When the robot 
powers up, it homes the sensor switches to the home switches.  When the robot 
enters a room, it stops points the sensors at the angles it expects to see to 
beacons (it has a guess of where it is in the room and a table of where the 
beacons are supposed to be).  If it finds the beacon there, it verifies the 
beacons transmitted code.  If it does not find the beacon, it does a square 
spiral search from the starting location outward until it finds the beacon.  
With the new beacon angles, it revises its pose estimate and proceeds to move 
to its desired location.  The speed of acquiring the beacon will be limited 
by the longest "off" time in the beacons ID code.  (That is you don't want to 
skip a sampled location just because your sensor was looking at that spot 
when the beacon was sending 0.)  While the robot is moving, the image of the 
beacon will drift off of one of the sensors, and the controller will need to 
issue steps to the pan/tilt system to bring the beacon back onto that sensor. 
 This will help the robot "track" the sensor position.  I suppose you could 
get away with one sensor and constantly scan around the beacon location, but 
this would slow your robot down, and four sensors will tell you if you have 
drifted off the spot, or if the beacon is sending a 0.
    Sorry for the length, but this is about all I can say on the topic right 
now.

Pherd
Currently in Pensacola FL  soon Hartford CT

