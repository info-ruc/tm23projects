Received: from postoffice.mail.cornell.edu (postoffice.mail.cornell.edu [132.236.56.7])
	by sundial.cs.cornell.edu (8.11.3/8.11.3/M-3.7) with ESMTP id fA1HuBR27099;
	Thu, 1 Nov 2001 12:56:11 -0500 (EST)
Received: from khaffy (d2040.dialup.cornell.edu [132.236.155.40])
	by postoffice.mail.cornell.edu (8.9.3/8.9.3) with ESMTP id MAA15940;
	Thu, 1 Nov 2001 12:56:08 -0500 (EST)
Received: from andre by khaffy with local (Exim 3.31 #1 (Debian))
	id 15zGU2-0000IX-00; Thu, 01 Nov 2001 12:58:06 +0100
Date: Thu, 1 Nov 2001 12:58:05 +0100
From: =?iso-8859-1?Q?Andr=E9?= Allavena <andre@CS.Cornell.EDU>
To: egs@CS.Cornell.EDU
Cc: andre@CS.Cornell.EDU
Subject: 615 PAPER 30
Message-ID: <20011101125805.A1116@khaffy>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
User-Agent: Mutt/1.3.20i
Sender: =?iso-8859-1?Q?Andr=E9_Allavena?= <andre@CS.Cornell.EDU>


The design and implementation of an intentional naming system

This paper describes a scheme or localisating services in a adhoc 
network. There are a set of generic attributes (a tree in fact), and a
service advertise itself by filling some of the attributes (printer,
Ithaca, etc.)
There are INS servers which store the available list of services, and
make it available to clients upon queies, and t the other INS.

I really don't like their scheme becase it is really inefficient in
terms of bandwidth. There is a distributed Bellman Ford running between
the different INS servers, and all the updates are sent to everybody
(this is analog to proactive routing, and tunrs out to be ineficient
wihth mobile nodes). Further more, does anybody care if there is another
printer on the other side of the network when there already are several
nearby?

There are talking of an application advertised metric for choosing the
best instance of the service the application need. Who chooses this
metric? t doesn't seem to be any application, the way they have
implemented it, it is the service provider and or the INS servers which
choose it.

2.2 I read a "rapid change due to node mobility quickly propagate trough
the system and new info replaces old information". I am not convinced.

What about a on demand service discovery?



-- 
André Allavena                     (local) 154 A Valentine Place   
École Centrale Paris (France)      Ithaca NY 14850 USA
Cornell University (NY)            (permanent) 879 Route de Beausoleil 
PhD in Computer Science            06320 La Turbie FRANCE

