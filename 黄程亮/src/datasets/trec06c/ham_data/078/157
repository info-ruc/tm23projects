Received: from wilkes.csl.cornell.edu (wilkes.csl.cornell.edu [132.236.71.69])
	by sundial.cs.cornell.edu (8.11.3/8.11.3/M-3.7) with ESMTP id fA1GksR16269
	for <egs@cs.cornell.edu>; Thu, 1 Nov 2001 11:46:54 -0500 (EST)
Received: (from daehyun@localhost)
	by wilkes.csl.cornell.edu (8.9.3/8.9.2) id LAA28632
	for egs@cs.cornell.edu; Thu, 1 Nov 2001 11:46:49 -0500 (EST)
	(envelope-from daehyun)
From: Daehyun Kim <daehyun@csl.cornell.edu>
Message-Id: <200111011646.LAA28632@wilkes.csl.cornell.edu>
Subject: 615 PAPER 31
To: egs@CS.Cornell.EDU
Date: Thu, 1 Nov 2001 11:46:48 -0500 (EST)
X-Mailer: ELM [version 2.4ME+ PL54 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit

This paper presented an information storage system called Semantic File
System (SFS).

The main idea of SFS is user programmable transducer. The transducer is
a filter whose input is file contents and whose output is a set of file 
attribute which is a field-value pair. 
Files stored in SFS are interpreted by the transducer to produce attributes.
Later, the attributes are used for rerival of the file. File access is base
on queries which describe desired attributes. Queries are boolean combinations
of attributes. As a result of query, a set of files or directories is give.

Compatibility with existing file system is an important issue. SFS provides
it by introducing the concept of a virtual directory. Virtual directory 
names are interpreted as queries and provide access to files and directories
in compatible with SFS. They implemented a SFS which support NFS protocol as
external interface. 

In my opinion, The main contribution of this paper is to introduce another
layer of files systems which is supported by the transducer. The transducer
acts as a filter between users and files and provides more flexible and versatile
file accesses. And it is also extendible by adding new transducers.
But, the latency of file access might be a problem. It is clear that SFS
requires more computations than the conventional file systems. So I'm not
sure that SFS is suitable for high load file server systems.

