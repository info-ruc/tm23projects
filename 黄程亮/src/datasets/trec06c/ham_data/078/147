Received: from capricorn.ds.csl.cornell.edu (capricorn.csl.cornell.edu [132.236.71.92])
	by sundial.cs.cornell.edu (8.11.3/8.11.3/M-3.7) with ESMTP id fA1GKNR11822
	for <egs@cs.cornell.edu>; Thu, 1 Nov 2001 11:20:23 -0500 (EST)
Subject: 615 Paper 31
Date: Thu, 1 Nov 2001 11:22:01 -0500
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Message-ID: <97C142C1212ED545B0023A177F5349C4053B31@capricorn.ds.csl.cornell.edu>
X-MS-Has-Attach: 
X-MimeOLE: Produced By Microsoft Exchange V6.0.4712.0
content-class: urn:content-classes:message
X-MS-TNEF-Correlator: 
Thread-Topic: 615 Paper 31
Thread-Index: AcFi8VZQgF5oUu7WSY6CkTy4uslrbA==
From: "Avneesh Bhatnagar" <avneesh@csl.cornell.edu>
To: <egs@CS.Cornell.EDU>
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by sundial.cs.cornell.edu id fA1GKNR11822

Semantic File Systems

This paper discusses a directory access scheme which exposes a lower of
access granularity through the use of attribute-value pairs. Using
specialized as well as generic transducers, the system provides the user
access flexibility,and a higher degree of usability.

The query mechanism works with the help of field virtual dirctories,
which do not have to be explicitly created. Each field virtual directory
is named by the field and has one entry for each possible value of the
field. The entries in this directory are the value virtual directories,
where there is an entry for each entity corresponding to each
field-value pair. The main idea is to map queries onto a tree structured
path name.

The authors determine the performance of this system, and as expected
the initial indexing process takes a significant amount of time, due to
a higher number of disk accesses. HOwever subsequent queries when cached
have a lower turnaround time. The attractive features of this system,
are the ability for the user to specify transducers and the ease with
which this can be integrated with the existing file system/applications.

It would be interesting to note the overheads when the data is more
complex e.g multimedia content. The authors also note that real time
indexing would be a hard task. Considering the time when this paper was
written, I think that the authors have introduced a novel idea.  

