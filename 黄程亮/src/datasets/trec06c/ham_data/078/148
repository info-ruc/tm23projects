Received: from bureau6.utcc.utoronto.ca (bureau6.utcc.utoronto.ca [128.100.132.16])
	by sundial.cs.cornell.edu (8.11.3/8.11.3/M-3.7) with ESMTP id fA1GNLR12507
	for <egs@cs.cornell.edu>; Thu, 1 Nov 2001 11:23:22 -0500 (EST)
Received: from webmail2.ns.utoronto.ca ([128.100.132.25] EHLO webmail2.ns.utoronto.ca ident: IDENT-NOT-QUERIED [port 48471]) by bureau6.utcc.utoronto.ca with ESMTP id <238374-27959>; Thu, 1 Nov 2001 11:23:08 -0500
Received: by webmail2.ns.utoronto.ca id <24411-13843>; Thu, 1 Nov 2001 11:23:00 -0500
To: COM S 615 <egs@CS.Cornell.EDU>
Subject: 615 PAPER 31
Message-ID: <1004631773.3be176ddc6ef8@webmail.utoronto.ca>
Date: Thu, 01 Nov 2001 11:22:53 -0500 (EST)
From: c.tavoularis@utoronto.ca
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
User-Agent: IMP/PHP IMAP webmail program 2.2.3

This paper presents the semantic file system as an alternative to traditional 
tree structured file systems. This system provides associative access to files, 
and employ transducers to extract attributes and values from the files. 

The term ‘semantic’ refers to the programmable transducers that use information 
about the semantics of object files and directories for indexing. A transducer 
is file type specific and produces attributes in the form of field-value pairs 
to describe each file. Each file can have more than one attribute, and the 
collective attributes are know as an entity. A user interface via a browser 
allows users to query files based on their attributes. Also, an API permits 
users to dynamically add new types of transducers to the system. A transducer 
table is used to match a transducer to a file type. The semantic file system 
can integrate over systems such as NSF by providing virtual directories, such 
that the virtual directory names are interpreted as queries. 

This system has many applications, for individuals to query interesting files, 
and for groups of users keep themselves up to date on shared files. This system 
by no means responds in real time and has a long indexing set up, which is not 
critical, but speed could be improved. I think a good alternative would be to 
allow users to specify attributes of their files rather than employing the 
transducers. This would make the overall system more efficient, and accurate.

