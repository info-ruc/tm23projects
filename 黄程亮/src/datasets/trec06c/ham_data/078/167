Received: from exchange.cs.cornell.edu (exchange.cs.cornell.edu [128.84.97.8])
	by sundial.cs.cornell.edu (8.11.3/8.11.3/M-3.7) with ESMTP id fA14ZGR28920
	for <egs@popsrv.cs.cornell.edu>; Wed, 31 Oct 2001 23:35:16 -0500 (EST)
content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
X-MimeOLE: Produced By Microsoft Exchange V6.0.4712.0
Subject: cs615 PAPER 30
Date: Wed, 31 Oct 2001 23:35:15 -0500
Message-ID: <706871B20764CD449DB0E8E3D81C4D4301E7F288@opus.cs.cornell.edu>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: cs615 PAPER 30
Thread-Index: AcFijpppeH7QfIyOR8G9omjf9Kws+w==
From: "Venu Ramasubramanian" <ramasv@CS.Cornell.EDU>
To: "Emin Gun Sirer" <egs@CS.Cornell.EDU>
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by sundial.cs.cornell.edu id fA14ZGR28920

The Design and Implementation of an Intentional Naming System

	This paper describes a service discovery system designed for a
dynamically changing network such as mobile network.  This system
acheives its objectives by employing an attribute-value based naming
scheme called intentional names to specify services.  The system employs
name resolvers distributed on an overlay network on top the existing
network.  Significant gain is achieved by avoiding static binding
between the specified name and services found.

	The intentional naming scheme is an attribute-value based naming
scheme much like a query in a database.  AV based naming does make
specifying services much easier for the end users.  In this system, the
name is described in terms of a tree structure that makes name
resolution quick and easy.  However this does reduce the expressibility
of the names.  This naming scheme does not seem to allow queries with
not, or to be specified as a name for a resource.

	The name is resolved by name resolvers distributed on an overlay
network.  The services are expected to periodically broadcast their
characteristics (AV pairs) that are stored by the name resolvers and
used to compare with queries.  The name resolvers form something similar
to routers in an ad hoc network.  The routing between the INRs take
place by means of a proactive distance vector algorithm.  The cost of
the proactive algorithm is kept down by controlling the number of INRs
in the overlay network.  New INRs are created when the current number is
not sufficient to resolve queries.  The INRs are divided into virtual
sets to keep the cost of proactivity and query resolution down.

	I believe that sperating the binding between name and service
providers is very interresting.  This helps them acheive the dynamic
adaptability and change bindings from one server to another as the
dynamics of the system changes.  However, i believe using a overlay like
network to resolve names may affect overall performance if the number of
virtual spaces increase or if the number of INRs increase.    

