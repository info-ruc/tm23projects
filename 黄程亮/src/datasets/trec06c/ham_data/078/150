Received: from exchange.cs.cornell.edu (exchange.cs.cornell.edu [128.84.97.8])
	by sundial.cs.cornell.edu (8.11.3/8.11.3/M-3.7) with ESMTP id fA1GWKR13930
	for <egs@popsrv.cs.cornell.edu>; Thu, 1 Nov 2001 11:32:20 -0500 (EST)
content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
X-MimeOLE: Produced By Microsoft Exchange V6.0.4712.0
Subject: 615 PAPER 31
Date: Thu, 1 Nov 2001 11:32:20 -0500
Message-ID: <706871B20764CD449DB0E8E3D81C4D430213A7BF@opus.cs.cornell.edu>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: 615 PAPER 31
Thread-Index: AcFi8sIbtWColMv9EdW5awCQJ59Etw==
From: "Ranveer Chandra" <ranveer@CS.Cornell.EDU>
To: "Emin Gun Sirer" <egs@CS.Cornell.EDU>
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by sundial.cs.cornell.edu id fA1GWKR13930

Semantic File Systems

This paper proposes a Semantic File System that implements a file system
layer on top of any existing file system.  In this paper SFS is
implemented over NFS, and supports virtual directories and content
extraction.  All accesses to files are through queries to the SFS layer
to maintain meta-data consistency and synchronization.  SFS supports the
creation of virtual directories, each directory pointing to files that
satisfy a query.  SFS uses user-written transducers that are
file-specific content extractors.  

Semantic FIle Systems aim to help users in organizing their files by
content and provides means to do so conveniently.  It is extremely
difficult to manage and query large file systems, for eg. experienced
UNIX users trying /usr/bin or /usr/local/bin or /usr/sbin or something
else!!!! SFS provides an efficient mechanism to handle shared data.  In
addition the idea of attribute as a field-value pair is interesting and
is has been used in many future systems, as late as the INS for resource
discovery.  Furthermore, SFS concepts have been used to develop other
resource discovery protocols, such as Discover in 1995.

Although SFS was poroposed in 1991, it has still not become popular.
One reason could be the huge amount of space used by SFS, and the bigger
reason could be that the hierarchical scheme presently used has its own
benefits.  A hybrid scheme using SFS and the hierarchical scheme would
be an interesting area of future work.


