Received: from interval.louisiana.edu (daemon@localhost [127.0.0.1])
	by interval.louisiana.edu (8.13.1/8.13.1/ull-interval-math-majordomo-1.5) with ESMTP id j1M1se5E013561
	for <reliable_computing-outgoing@interval.louisiana.edu>; Mon, 21 Feb 2005 19:54:40 -0600 (CST)
Received: (from daemon@localhost)
	by interval.louisiana.edu (8.13.1/8.13.1/Submit) id j1M1seOu013560
	for reliable_computing-outgoing; Mon, 21 Feb 2005 19:54:40 -0600 (CST)
Received: from mail.your.biglobe.net (mdsv0021.ht.necidc.net [202.225.207.136])
	by interval.louisiana.edu (8.13.1/8.13.1/ull-interval-math-majordomo-1.5) with SMTP id j1M1sUxp013556
	for <reliable_computing@interval.louisiana.edu>; Mon, 21 Feb 2005 19:54:36 -0600 (CST)
Received: (biglobe-qmail 11291 invoked by uid 0); 22 Feb 2005 10:54:16 +0900
Received: from kuma.waseda.jp [172.23.46.20] by biglobe-qmail with SMTP; 22 Feb 2005 10:54:16 +0900
Message-Id: <200502220154.AA00576@kuma.waseda.jp>
From: Takeshi OGITA <ogita@waseda.jp>
Date: Tue, 22 Feb 2005 10:54:13 +0900
To: "Sergey P. Shary" <shary@ict.nsc.ru>
Cc: <reliable_computing@interval.louisiana.edu>
Subject: Re: INTLAB problems
In-Reply-To: <003001c51591$4c979190$7c00a8c0@COMP0>
References: <003001c51591$4c979190$7c00a8c0@COMP0>
MIME-Version: 1.0
X-Mailer: AL-Mail32 Version 1.13
Content-Type: text/plain; charset=us-ascii
Sender: owner-reliable_computing@interval.louisiana.edu
Precedence: bulk

You can see the option by
>> help intvalinit
and then find
Default thick real interval times thick real interval:


Best regards,

Takeshi Ogita

>
>
>
>Colleagues,
>
>
>
>
>
>I have a question on how INTLAB and numerous INTLAB codes operate interval matrices.
>
>
>
>
>Running a simple INTLAB function
>
> ==========================================
>
>function y = a_bug
>
>a = [  infsup(0,1)   infsup(2,3) ];
>
>b = [ infsup(-2,0.5) infsup(1,3) ];
>
>
>    y = a*b';
>
>
>    %y = 0;
>
>    %for k = 1 : 2;
>
>    %    y = y + a(k)*b(k);
>
>    %end
>
>
>===========================================
>
>
>that computes a "scalar product" of two interval 2-vectors,
>
>I get the answer
>
>
>      >> infsup(a_bug)
>
>      intval  =
>
>      [  -1.00000000000000,  10.25000000000000]
>
>
>
>
>However, rewriting the above in mathematically equivalent algorithm
>
>that uses "for" cycle
>
>
>==============================================
>
>
>function y = a_bug
>
>
>a = [  infsup(0,1)   infsup(2,3) ];
>
>b = [ infsup(-2,0.5) infsup(1,3) ];
>
>
>    %y = a*b';
>
>
>    y = 0;
>
>    for k = 1 : 2;
>
>        y = y + a(k)*b(k);
>
>    end
>
>
>==============================================
>
>
>
>produces
>
>
>           >> infsup(a_bug)
>
>            intval  =
>
>            [   0.00000000000000,   9.50000000000000]
>
>
>
>
>
>
>What is the reason of such a discrepancy?
>
>It seems to be well known: INTLAB uses a special "fast" midpoint-radius algorithm
>
>for interval matrix multiplication called in compact MATLAB form, and this algorithm
>
>is not "sharp".
>
>
>
>Well, then I do not understand why G. Hargreaves in his M.S. thesis "Interval analysis in 
MATLAB"
>
>as well as many others use such a compact form of the interval matrix product in their 
INTLAB codes,
>
>thus getting a substantial overestimation of their results?
>
>
>
>This is the case, in particular, for interval Gauss method and Krawczyk method
>
>whose codes are written out by Hargreaves in his thesis.
>
>
>
>
>
>Sergey P. Shary
>
>
>
>
>
>
>
>


