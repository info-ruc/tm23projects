Received: from postoffice10.mail.cornell.edu (postoffice10.mail.cornell.edu [132.236.56.14])
	by sundial.cs.cornell.edu (8.11.7-20031020/8.11.7/M-3.25) with ESMTP id k3I6wE217202
	for <egs+summary@cs.cornell.edu>; Tue, 18 Apr 2006 02:58:14 -0400 (EDT)
Received: from orpheus3.dataserver.cornell.edu (orpheus3.dataserver.cornell.edu [128.253.161.167])
	by postoffice10.mail.cornell.edu (8.12.10/8.12.6) with ESMTP id k3I6wDiP020486
	for <egs+summary@cs.cornell.edu>; Tue, 18 Apr 2006 02:58:13 -0400 (EDT)
Message-ID: <1047235984.1145343491824.JavaMail.webber@orpheus3.dataserver.cornell.edu>
Date: Tue, 18 Apr 2006 02:58:12 -0400 (EDT)
From: Huang Shiang-Jia <sh366@cornell.edu>
To: egs+summary@cs.cornell.edu
Subject: PAPER 22
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Mailer: uPortal WEB email client 3.0

To ease the development and deployment of a diverse set of overlay systems, some research works have recently focused on the services that abstractly express the behaviors and provide sharable/reusable codes of overlay networks.
Performance is an issue in such works.

<P2>
* P2 uses OverLog, a logic language, to specify overlays declaratively. They model an overlay as a distributed data structure represented by a set of relations. Two relations, tables and streams, are employed.
* By its dataflow engine, P2 executes fundamental functionalities of an overlay system, given logic descriptions issued by applications. Multiple overlay specifications can be compiled into a single dataflow in its dataflow framework.
* In this paper, several research directions are also listed, including the breadth of codes, transport protocols, on-line distributed debugging and security.

<MACEDON>
* Macedon specifies an overlay network in terms of event-driven finite state machines. Each node maintains a local 'state'. 'Events' such as message reception or node failures move a node from one state to another. 'Transitions' indicate the actions to take in response to events.
* From the specification above, Macedon generates API-consistent codes for a variety of infrastructures leveraging shared libraries. In this way, it enables protocols layering from one overlay to another.

