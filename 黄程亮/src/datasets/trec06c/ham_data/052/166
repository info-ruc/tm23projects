Received: from smtp1.andrew.cmu.edu (SMTP1.ANDREW.CMU.EDU [128.2.10.81])
	by aleve.media.mit.edu (8.9.1a/8.9.1/+ALEVE) with ESMTP id AAA09829
	for <handyboard@media.mit.edu>; Thu, 16 Sep 1999 00:21:25 -0400 (EDT)
Received: from SIMON.RES.CMU.EDU (SIMON.RES.CMU.EDU [128.2.146.25])
	by smtp1.andrew.cmu.edu (8.9.3/8.9.3) with SMTP id AAA01449;
	Thu, 16 Sep 1999 00:21:18 -0400 (EDT)
Date: Thu, 16 Sep 1999 00:21:21 -0400
From: "Will Hein" <wfh@andrew.cmu.edu>
To: "Javaid Iqbal" <j.iqbal@unsw.edu.au>,
        "Handy Board" <handyboard@media.mit.edu>
Subject: Re: Boolean operators in IC
Message-Id: <1138410492.937441281@SIMON.RES.CMU.EDU>
X-Mailer: Mulberry (Win32) [1.3.3, s/n S-100002]
X-Authenticated: wfh by cyrus.andrew.cmu.edu
X-Licensed-To: site license
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Booleans work the same as in most languages.  If you want to test for a
certain condition or set of conditions, then break it down into things that
can be answered as true or false.  
You can use equalities, such as:
if (sky == blue)  printf ("you're on earth") ;
if (sky != blue)  printf ("you're not on earth") ;

you can use realtionship tests such as:
if ( franks_age  <= bobs_age )  <some code here>; 
if ( franks_age  >= bobs_age )  <some code here>; 

you can also force conditions, such as
while (0==0) <some code here>;

Some things that I usually use booleans for are testing if an analog sensor
is above or below a certain level, a switch is depressed, or a loop has
executed the desired number of times.
Hope that helps.
-Will Hein
"Smile.  It makes people wonder what you've been up to."

