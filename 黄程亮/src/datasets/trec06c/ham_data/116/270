Received: from exchfe2.cs.cornell.edu (exchfenlb-2.cs.cornell.edu [128.84.97.34])
	by sundial.cs.cornell.edu (8.11.7-20031020/8.11.7/M-3.22) with ESMTP id k27G7Ot19164
	for <egs@unix.cucs>; Tue, 7 Mar 2006 11:07:24 -0500 (EST)
Received: from EXCHVS2.cs.cornell.edu ([128.84.97.24]) by exchfe2.cs.cornell.edu with Microsoft SMTPSVC(6.0.3790.1830);
	 Tue, 7 Mar 2006 11:07:23 -0500
X-MimeOLE: Produced By Microsoft Exchange V6.5
Content-class: urn:content-classes:message
MIME-Version: 1.0
X-Security: message sanitized on sundial.cs.cornell.edu
	See http://www.impsec.org/email-tools/sanitizer-intro.html
	for details. $Revision: 1.148 $Date: 2004-12-19 11:59:17-08 
X-Security: The postmaster has not enabled quarantine of poisoned messages.
Content-Type: multipart/alternative;
	boundary="----_=_NextPart_001_01C64201.382305C2"
Subject: PAPER 12
Date: Tue, 7 Mar 2006 11:07:22 -0500
Message-ID: <2EE48095D8C21643B0B70EC95F9BFBAF01526392@EXCHVS1.cs.cornell.edu>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: PAPER 12
Thread-Index: AcZCATf0tsFcOEYFTmyhZ9FbhPbW5A==
From: "Ian Kash" <kash@cs.cornell.edu>
To: "Emin Gun Sirer" <egs@cs.cornell.edu>
X-OriginalArrivalTime: 07 Mar 2006 16:07:23.0768 (UTC) FILETIME=[388B1F80:01C64201]

This is a multi-part message in MIME format.

------_=_NextPart_001_01C64201.382305C2
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable

Tried sending this to egs+summary@cs.cornell.edu, but it was bouncing.

=20

 - Ian

=20

PAST is a storage system built on top of Pastry.  To ensure availability =
of
files it stores k copies of each at the k nearest nodes to the files =
location
in the ring.  It uses 2 mechanisms to store copies when one of those k =
is
unable to store one.  Replica diversion allows a node to choose another =
node
in its leaf set to store the copy and just keeps a pointer to that node =
(this
mechanism is also leveraged to minimize copying on node joins).  File
diversion uses a new salt to select a new location in the ring to store =
the
file in the event the original region lacks room to store the file using
replica diversion.  PAST also uses space not currently allocated to file
storage to cache files for faster lookups.  One concern is that neither =
form
of diversion seems to work well for larger files because of the =
likelyhood
that many or most clients would be unwilling to store the entire file =
and
would have to pay the entire cost if the file was popular.  While this =
could
be handled by a higher level application, it seems like something PAST =
should
handle.

CFS is a storage system built on top of Chord.  While PAST stores the =
entire
file, CFS breaks the file into blocks, which helps with large files and =
load
balancing.  A possible downside of this approach is that if any block is
unavailable, the entire file is effectively unavailable.  This means =
that
even if the possibility of a single block being unavailable is quite =
small,
the probability of a large file being unavailable may be quite large.  =
Like
PAST, they reject Reed-Solomon or other encodings to achieve redundancy
because of the cost of fetching multiple shares per block.  However, =
they do
not consider using Reed-Solomon rather than blocking.  This would =
maintain
the advantages of blocking, while removing the reliance on having every =
block
available to have the file available.

=20


------_=_NextPart_001_01C64201.382305C2
Content-Type: text/html; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable

<html xmlns:o=3D"urn:schemas-microsoft-com:office:office" =
xmlns:w=3D"urn:schemas-microsoft-com:office:word" =
xmlns=3D"http://www.w3.org/TR/REC-html40">

<head>
<DEFANGED_META HTTP-EQUIV=3D"Content-Type" CONTENT=3D"text/html; =
charset=3Dus-ascii">
<DEFANGED_meta name=3DGenerator content=3D"Microsoft Word 11 (filtered medium)">
 <!-- <DEFANGED_STYLE>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
span.EmailStyle17
	{mso-style-type:personal-compose;
	font-family:Arial;
	color:windowtext;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;}
div.Section1
	{page:Section1;}
-->
 --> </DEFANGED_STYLE>

</head>

<body lang=3DEN-US link=3Dblue vlink=3Dpurple>

<div class=3DSection1>

<p><font size=3D2 face=3D"Times New Roman"><span =
style=3D'font-size:10.0pt'>Tried
sending this to <a =
href=3D"mailto:egs+summary@cs.cornell.edu">egs+summary@cs.cornell.edu</a>=
,
but it was bouncing.<o:p></o:p></span></font></p>

<p><font size=3D2 face=3D"Times New Roman"><span =
style=3D'font-size:10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p><font size=3D2 face=3D"Times New Roman"><span =
style=3D'font-size:10.0pt'>&nbsp;- Ian<o:p></o:p></span></font></p>

<p><font size=3D2 face=3D"Times New Roman"><span =
style=3D'font-size:10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p><font size=3D2 face=3D"Times New Roman"><span =
style=3D'font-size:10.0pt'>PAST is a
storage system built on top of Pastry.&nbsp; To ensure availability of =
files it
stores k copies of each at the k nearest nodes to the files location in =
the
ring.&nbsp; It uses 2 mechanisms to store copies when one of those k is =
unable
to store one.&nbsp; Replica diversion allows a node to choose another =
node in
its leaf set to store the copy and just keeps a pointer to that node =
(this
mechanism is also leveraged to minimize copying on node joins).&nbsp; =
File
diversion uses a new salt to select a new location in the ring to store =
the
file in the event the original region lacks room to store the file using =
replica
diversion.&nbsp; PAST also uses space not currently allocated to file =
storage
to cache files for faster lookups.&nbsp; One concern is that neither =
form of
diversion seems to work well for larger files because of the likelyhood =
that
many or most clients would be unwilling to store the entire file and =
would have
to pay the entire cost if the file was popular.&nbsp; While this could =
be
handled by a higher level application, it seems like something PAST =
should
handle.<br>
<br>
CFS is a storage system built on top of Chord.&nbsp; While PAST stores =
the
entire file, CFS breaks the file into blocks, which helps with large =
files and
load balancing.&nbsp; A possible downside of this approach is that if =
any block
is unavailable, the entire file is effectively unavailable.&nbsp; This =
means
that even if the possibility of a single block being unavailable is =
quite
small, the probability of a large file being unavailable may be quite
large.&nbsp; Like PAST, they reject Reed-Solomon or other encodings to =
achieve
redundancy because of the cost of fetching multiple shares per =
block.&nbsp;
However, they do not consider using Reed-Solomon rather than =
blocking.&nbsp;
This would maintain the advantages of blocking, while removing the =
reliance on
having every block available to have the file =
available.</span></font><o:p></o:p></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'><o:p>&nbsp;</o:p></span></font></p>

</div>

</body>

</html>

------_=_NextPart_001_01C64201.382305C2--

