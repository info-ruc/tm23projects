Received: from cantvc.canterbury.ac.nz (cantvc.canterbury.ac.nz [132.181.2.36])
	by psy1.psych.arizona.edu (8.12.10/8.12.4) with ESMTP id jA9LW45L025497
	for <DMDX@psy1.psych.arizona.edu>; Wed, 9 Nov 2005 14:32:04 -0700
Received: from CONVERSION-A1.it.canterbury.ac.nz by it.canterbury.ac.nz
 (PMDF V6.2-X27 #31178) id <01LV8ALRMWKG9KRTNQ@it.canterbury.ac.nz> for
 DMDX@psy1.psych.arizona.edu; Thu,
 10 Nov 2005 10:32:02 +1200 (NEW ZEALAND STANDARD TIME)
Received: from exchange.canterbury.ac.nz
 (cantwe1.giga.canterbury.ac.nz [132.181.2.113])
 by it.canterbury.ac.nz (PMDF V6.2-X27 #30791)
 with ESMTP id <01LV8ALR2B1K8Z8BGE@it.canterbury.ac.nz> for
 DMDX@psy1.psych.arizona.edu; Thu,
 10 Nov 2005 10:32:01 +1300 (NEW ZEALAND DAYLIGHT TIME)
Received: from exchange.canterbury.ac.nz ([132.181.2.110])
 by exchange.canterbury.ac.nz with Microsoft SMTPSVC(6.0.3790.1830); Thu,
 10 Nov 2005 10:31:52 +1300
Date: Thu, 10 Nov 2005 10:31:52 +1300
From: Mark Boettcher <mark.boettcher@canterbury.ac.nz>
Subject: [DMDX] DMDX UI and New Software
To: DMDX@psy1.psych.arizona.edu
Message-id: <E27419033AFCE14E92F0FEC8AFFFDD8FFA99D6@cantwe2.canterbury.ac.nz>
MIME-version: 1.0
Content-type: multipart/alternative;
 boundary="Boundary_(ID_+kFQonnA/WXoTim5sYWM3g)"
Reply-To: DMDX@psy1.psych.arizona.edu
Sender: DMDX-owner@psy1.psych.arizona.edu
Precedence: list

This is a multi-part message in MIME format.

--Boundary_(ID_+kFQonnA/WXoTim5sYWM3g)
Content-type: text/plain;	charset="us-ascii"
Content-transfer-encoding: quoted-printable

A couple of years ago I proposed collaborating with Jonathan to produce
a GUI front-end for DMDX. I thought then and still do that his approach
using DirectX was the best way to do this sort of thing. For whatever
reasons (maybe so other people don't screw up the code?), Jonathan keeps
the source code pretty much to himself and wasn't willing to do this.=20

=20

As a result I started writing my own software package two years ago. As
the programmer for the University of Canterbury (Christchurch, NZ) Psyc
Dept I needed a general-purpose program that was easy to use with NO
scripting required, able to provide sub-millisecond latencies for
reaction timing, able to control display updates and timings accurate to
one scan line and with the flexibility to add new modules so that any
programmer able to create a DLL could create a new module for any
special purpose.=20

=20

Example add-on modules already created and in use with the program
include: one to generate Gabor patches on-the-fly, one to control an
IView Eye Tracker and one to control a homebrew box for pigeons
consisting of a 6" lcd, feed hopper, several lights and several switches
and a touchscreen. The pigeon box has a 24-bit USB DIO box (US $100) to
control lights and hoppers and get switch closures from pigeon pecks.
Four of these boxes run on one PC concurrently and asynchronously. The
researcher can actually run four independent and completely different
experiments at once. The only limit is the number of PCI VGA cards we
could stuff into the computer.

=20

Standard built-in event modules include bitmap events which allow
loading and display of almost any image format, text events which allow
text in any font, orientation, color and size, branching events allowing
unconditional and conditional jumps based on global variables or inputs
and input events for key presses, mouse clicks, touchscreen, etc.
Shortly audio and video event modules will be complete. One particularly
strong feature is the ability to use 'sequence lists' which are lists of
data either loaded from .CSV files or auto-generated. An example - I
want to display an image, wait for key input, record key pressed and
repeat 10 times. I would create a plain text file called, 'myimages.csv'
which is just a list of file names, i.e., foo.jpg bar.png blech.bmp. In
the sequence editor I attach this file to the bitmap event file name
parameter and a new image will be displayed each time this event is
executed. The sequence editor allows randomizing the list, assigning
categories (too complicated to describe here) and also allows
auto-generation of lists. Here is a more detailed example:

=20

I add a 'Display Text' event. In the edit box used for the text to be
displayed I right-click to bring up the Sequence Editor. I check the box
to show random words from the built-in word list and type '5' in the
length. When the experiment runs the user will see a different 5-letter
common English word each time this event is executed. I can also add a
sequence to the text color using a file to change the color of the text
in a known order each time the event is executed.=20

=20

Years ago I wrote the 'VitalView' software at www.minimitter.com
<http://www.minimitter.com/>  which does data collection and almost
real-time analysis on up to 240 channels at 1000Hz simultaneously on a
Windows 98 machine using Mini-Mitter's multiplexers. I also have many
years experience in the computer gaming industry and was involved in the
original DirectX design review before its initial release by Microsoft.
I have used all of this experience to design this program from scratch.
All code is written in C++ and targeted towards typical Windows XP
machines less than 4 years old. Typical training time for someone using
this for the first time to create and run an experiment is on the order
of 30 minutes. After that I often don't hear from the researcher again
until the experiment is finished.

=20

If anyone is interested in trying this software out about the first of
the year please email me directly at: mark.boettcher@canterbury.ac.nz
and give me an idea of the research you're doing and the software
requirements. The current version still lacks a lot of the features
planned, but is stable and gives accurate data.

=20

Cheers,

=20

Mark Boettcher

=20

________________________________

From: DMDX-owner@psy1.psych.arizona.edu
[mailto:DMDX-owner@psy1.psych.arizona.edu] On Behalf Of Jonathan C.
Forster
Sent: Thursday, 10 November 2005 8:46 a.m.
To: DMDX@psy1.psych.arizona.edu
Subject: [DMDX] Re: scripts

=20

At 04:57 PM 11/9/2005 +0000, you wrote:




What amazed me, when I started with DMDX not too long ago, was that
nobody had produced an easy way for a non-technical user to create
scripts, or modify basic scripts for their own purposes (please let me
know if I'm wrong !).


  Various people have expressed a desire to do so throughout history, a
number have even made tutorials (that we are thoroughly thankful for)
and that are linked to from the DMDX Updates page.  However a
comprehensive work is a truly staggering amount of work and anyone that
seriously investigates writing a manual for DMDX soon finds that out.
There's a reason why the profession of technical writer exists and alas
none of us are a member of it.  So it hasn't happened.





What I've ended up doing is creating a document template in WORD, using
tables, which set out all the basic commands in 'greyed out' columns,
leaving all the bits the user needs to fill in (e.g. text, file names,
etc) in white columns.  I then change all the commands as necessary
before handing over to the user to do the mundane stuff !

P.S. of course once the template is produced, you need to use WORDPAD to
do the editing !=20

Chris Letts,=20
Newcastle University.=20

=20

                                               /"\

 -jonathan (j.c.f.)                            \ /

                                                X=20

    ASCII RIBBON CAMPAIGN - AGAINST HTML MAIL  / \=20

=20

Associate with well-mannered persons and your manners will improve.

Run with decent folk and your own decent instincts will be

strengthened.  Keep the company of bums and you will become a bum.

Hang around with rich people and you will end by picking up the check

and dying broke.

=20

                                               -  Stanley Walker

=20


--Boundary_(ID_+kFQonnA/WXoTim5sYWM3g)
Content-type: text/html;	charset="us-ascii"
Content-transfer-encoding: quoted-printable

<html xmlns:v=3D"urn:schemas-microsoft-com:vml" =
xmlns:o=3D"urn:schemas-microsoft-com:office:office" =
xmlns:w=3D"urn:schemas-microsoft-com:office:word" =
xmlns:st1=3D"urn:schemas-microsoft-com:office:smarttags" =
xmlns=3D"http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dus-ascii">
<meta name=3DGenerator content=3D"Microsoft Word 11 (filtered medium)">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]--><o:SmartTagType
 namespaceuri=3D"urn:schemas-microsoft-com:office:smarttags" =
name=3D"City"/>
<o:SmartTagType =
namespaceuri=3D"urn:schemas-microsoft-com:office:smarttags"
 name=3D"PlaceType"/>
<o:SmartTagType =
namespaceuri=3D"urn:schemas-microsoft-com:office:smarttags"
 name=3D"PlaceName"/>
<o:SmartTagType =
namespaceuri=3D"urn:schemas-microsoft-com:office:smarttags"
 name=3D"place"/>
<o:SmartTagType =
namespaceuri=3D"urn:schemas-microsoft-com:office:smarttags"
 name=3D"PersonName"/>
<!--[if !mso]>
<style>
st1\:*{behavior:url(#default#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
span.EmailStyle17
	{mso-style-type:personal-reply;
	font-family:Arial;
	color:navy;}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;}
div.Section1
	{page:Section1;}
-->
</style>

</head>

<body lang=3DEN-US link=3Dblue vlink=3Dpurple>

<div class=3DSection1>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'>A couple of years ago I proposed
collaborating with Jonathan to produce a GUI front-end for DMDX. I =
thought then
and still do that his approach using DirectX was the best way to do this =
sort
of thing. For whatever reasons (maybe so other people don&#8217;t screw =
up the
code?), Jonathan keeps the source code pretty much to himself and =
wasn&#8217;t
willing to do this. <o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'>As a result I started writing my =
own
software package two years ago. As the programmer for the University of
Canterbury (Christchurch, NZ) Psyc Dept I needed a general-purpose =
program that
was easy to use with NO scripting required, able to provide =
sub-millisecond
latencies for reaction timing, able to control display updates and =
timings
accurate to one scan line and with the flexibility to add new modules so =
that
any programmer able to create a DLL could create a new module for any =
special
purpose. <o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'>Example add-on modules already =
created and
in use with the program include: one to generate Gabor patches =
on-the-fly, one
to control an IView Eye Tracker and one to control a homebrew box for =
pigeons
consisting of a 6&#8221; lcd, feed hopper, several lights and several =
switches
and a touchscreen. The pigeon box has a 24-bit USB DIO box (US $100) to =
control
lights and hoppers and get switch closures from pigeon pecks. Four of =
these boxes
run on one PC concurrently and asynchronously. The researcher can =
actually run
four independent and completely different experiments at once. The only =
limit
is the number of PCI VGA cards we could stuff into the =
computer.<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'>Standard built-in event modules =
include
bitmap events which allow loading and display of almost any image =
format, text
events which allow text in any font, orientation, color and size, =
branching
events allowing unconditional and conditional jumps based on global =
variables
or inputs and input events for key presses, mouse clicks, touchscreen, =
etc. Shortly
audio and video event modules will be complete. One particularly strong =
feature
is the ability to use &#8216;sequence lists&#8217; which are lists of =
data
either loaded from .CSV files or auto-generated. An example &#8211; I =
want to
display an image, wait for key input, record key pressed and repeat 10 =
times. I
would create a plain text file called, &#8216;myimages.csv&#8217; which =
is just
a list of file names, i.e., foo.jpg bar.png blech.bmp. In the sequence =
editor I
attach this file to the bitmap event file name parameter and a new image =
will
be displayed each time this event is executed. The sequence editor =
allows
randomizing the list, assigning categories (too complicated to describe =
here)
and also allows auto-generation of lists. Here is a more detailed =
example:<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'>I add a &#8216;Display Text&#8217; =
event.
In the edit box used for the text to be displayed I right-click to bring =
up the
Sequence Editor. I check the box to show random words from the built-in =
word
list and type &#8216;5&#8217; in the length. When the experiment runs =
the user
will see a different 5-letter common English word each time this event =
is
executed. I can also add a sequence to the text color using a file to =
change
the color of the text in a known order each time the event is executed. =
<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'>Years ago I wrote the =
&#8216;VitalView&#8217;
software at <a =
href=3D"http://www.minimitter.com/">www.minimitter.com</a> which
does data collection and almost real-time analysis on up to 240 channels =
at
1000Hz simultaneously on a Windows 98 machine using Mini-Mitter&#8217;s =
multiplexers.
I also have many years experience in the computer gaming industry and =
was involved
in the original DirectX design review before its initial release by =
Microsoft. I
have used all of this experience to design this program from scratch. =
All code
is written in C++ and targeted towards typical Windows XP machines less =
than 4
years old. Typical training time for someone using this for the first =
time to
create and run an experiment is on the order of 30 minutes. After that I =
often don&#8217;t
hear from the researcher again until the experiment is =
finished.<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'>If anyone is interested in trying =
this software
out about the first of the year please email me directly at: <a
href=3D"mailto:mark.boettcher@canterbury.ac.nz">mark.boettcher@canterbury=
.ac.nz</a>
and give me an idea of the research you&#8217;re doing and the software =
requirements.
The current version still lacks a lot of the features planned, but is =
stable
and gives accurate data.<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'>Cheers,<o:p></o:p></span></font></p>=


<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'>Mark =
Boettcher<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span =
style=3D'font-size:
10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></span></font></p>

<div>

<div class=3DMsoNormal align=3Dcenter style=3D'text-align:center'><font =
size=3D3
face=3D"Times New Roman"><span style=3D'font-size:12.0pt'>

<hr size=3D2 width=3D"100%" align=3Dcenter tabindex=3D-1>

</span></font></div>

<p class=3DMsoNormal><b><font size=3D2 face=3DTahoma><span =
style=3D'font-size:10.0pt;
font-family:Tahoma;font-weight:bold'>From:</span></font></b><font =
size=3D2
face=3DTahoma><span style=3D'font-size:10.0pt;font-family:Tahoma'>
DMDX-owner@psy1.psych.arizona.edu =
[mailto:DMDX-owner@psy1.psych.arizona.edu] <b><span
style=3D'font-weight:bold'>On Behalf Of </span></b>Jonathan C. =
Forster<br>
<b><span style=3D'font-weight:bold'>Sent:</span></b> Thursday, 10 =
November 2005
8:46 a.m.<br>
<b><span style=3D'font-weight:bold'>To:</span></b> <st1:PersonName =
w:st=3D"on">DMDX@psy1.psych.arizona.edu</st1:PersonName><br>
<b><span style=3D'font-weight:bold'>Subject:</span></b> [DMDX] Re: =
scripts</span></font><o:p></o:p></p>

</div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'>At 04:57 PM 11/9/2005 +0000, you wrote:<br>
<br>
<br>
<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'>What amazed me, when I started with DMDX not too long =
ago,
was that nobody had produced an easy way for a non-technical user to =
create
scripts, or modify basic scripts for their own purposes (please let me =
know if
I'm wrong !).</span></font><o:p></o:p></p>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'><br>
&nbsp; Various people have expressed a desire to do so throughout =
history, a
number have even made tutorials (that we are thoroughly thankful for) =
and that
are linked to from the DMDX Updates page.&nbsp; However a comprehensive =
work is
a truly staggering amount of work and anyone that seriously investigates
writing a manual for DMDX soon finds that out.&nbsp; There's a reason =
why the
profession of technical writer exists and alas none of us are a member =
of
it.&nbsp; So it hasn't happened.<br>
<br>
<br>
<br>
<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'>What I've ended up doing is creating a document =
template in
WORD, using tables, which set out all the basic commands in 'greyed out'
columns, leaving all the bits the user needs to fill in (e.g. text, file =
names,
etc) in white columns.&nbsp; I then change all the commands as necessary =
before
handing over to the user to do the mundane stuff !<br>
</span></font><br>
<font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;font-family:Arial'>P.S.
of course once the template is produced, you need to use WORDPAD to do =
the
editing !</span></font> <br>
<br>
<i><font color=3Dnavy><span style=3D'color:navy;font-style:italic'>Chris =
Letts,</span></font></i>
<br>
<st1:place w:st=3D"on"><st1:PlaceName w:st=3D"on"><i><font =
color=3Dnavy><span
  =
style=3D'color:navy;font-style:italic'>Newcastle</span></font></i></st1:P=
laceName><i><font
 color=3Dnavy><span style=3D'color:navy;font-style:italic'> =
<st1:PlaceType =
w:st=3D"on">University</st1:PlaceType></span></font></i></st1:place><i><f=
ont
color=3Dnavy><span =
style=3D'color:navy;font-style:italic'>.</span></font></i> =
<o:p></o:p></p>

<p class=3DMsoNormal style=3D'margin-bottom:12.0pt'><font size=3D3
face=3D"Times New Roman"><span =
style=3D'font-size:12.0pt'><o:p>&nbsp;</o:p></span></font></p>

<div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
/&quot;\<o:p></o:p></span></font></p>

</div>

<div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'>&nbsp;-jonathan
(j.c.f.)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;
\ /<o:p></o:p></span></font></p>

</div>

<div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
X <o:p></o:p></span></font></p>

</div>

<div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'>&nbsp;&nbsp;&nbsp; ASCII RIBBON CAMPAIGN - AGAINST HTML =
MAIL&nbsp; / \ <o:p></o:p></span></font></p>

</div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'><o:p>&nbsp;</o:p></span></font></p>

<div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'>Associate with well-mannered persons and your manners will =
improve.<o:p></o:p></span></font></p>

</div>

<div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'>Run with decent folk and your own decent instincts will =
be<o:p></o:p></span></font></p>

</div>

<div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'>strengthened.&nbsp; Keep the company of bums and you will become =
a bum.<o:p></o:p></span></font></p>

</div>

<div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'>Hang around with rich people and you will end by picking up the =
check<o:p></o:p></span></font></p>

</div>

<div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'>and dying broke.<o:p></o:p></span></font></p>

</div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'><o:p>&nbsp;</o:p></span></font></p>

<div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-&nbsp; <st1:City w:st=3D"on">Stanley</st1:City> <st1:City =
w:st=3D"on"><st1:place
 w:st=3D"on">Walker</st1:place></st1:City><o:p></o:p></span></font></p>

</div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span =
style=3D'font-size:
12.0pt'><o:p>&nbsp;</o:p></span></font></p>

</div>

</body>

</html>

--Boundary_(ID_+kFQonnA/WXoTim5sYWM3g)--

