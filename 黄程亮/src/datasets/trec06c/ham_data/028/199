Received: from isua2.iastate.edu (isua2.iastate.edu [129.186.1.202])
	by aleve.media.mit.edu (8.9.1a/8.9.1/+ALEVE) with ESMTP id XAA24755
	for <handyboard@media.mit.edu>; Sat, 28 Nov 1998 23:06:54 -0500 (EST)
From: krasing@iastate.edu
Received: from localhost (krasing@localhost)
	by isua2.iastate.edu (8.8.5/8.8.5) with SMTP id WAA27109;
	Sat, 28 Nov 1998 22:06:28 -0600 (CST)
Message-Id: <199811290406.WAA27109@isua2.iastate.edu>
To: jdunn@unm.edu
Cc: handyboard@media.mit.edu
Subject: Re: Has anyone been experimenting with mapping algorithms?
X-Mailer: EasyVincent 3.3
In-Reply-To: Your message of Sat, 28 Nov 1998 16:35:23 -0700
             <366088BB.F172CB23@unm.edu>
Date: Sat, 28 Nov 1998 22:06:26 CST
Sender: krasing@iastate.edu

For a class project, I found a few alternatives for obstacle avoidance 
with known areas using evolvable code. You could call it mapping, I 
suppose, though it maps for a specific type of problems - those that have 
a "goal" of some sort (I used a lightbulb and analog photoelectric 
sensors for the light detection).  I'm in the process of translating i 
the best method (neural nets) over to IC (it's currently in C++). I do 
not remember how  big it was in C++ and as I'm using an older version of 
IC, I do not know how big it will be.

Basically what it does  is use a digital touch sensor to mark the 
obstacles (walls, etc.), and as it evolves, it learns to avoid these 
things. By using random "goal" and "start" positions in the evolution of 
the neural nets, it learns to avoid the obstacles and  when in use, it 
does not need a "goal" after the net is evolved. I don't know if this is 
what you were talking about or not. It's fun to play with, though. :)

On the 350MHz network I used to run the code for a known, simple course 
(four walls, two walls offor "obstacles"), it took maybe 2 minutes to run a 
few thousand neural nets through a few thousand evolutionary generations. 
Then, the net was thrown into IC code, and tested. Did extremely well in 
my rather biased opinion :)

-kr

===
Kate R.
Junior, ME '01, Math '02
Iowa State University
===

> Hi everyone,
> 
> We've been reading up on the many different algorithms for mapping an
> environment using autonomous robots.  Has anyone else been trying to figure
> out the best approach to map an area and it's obstacles using less than 32k
> of memory?
> 

