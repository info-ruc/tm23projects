Received: from wproxy.gmail.com (wproxy.gmail.com [64.233.184.202] (may be forged))
	by sundial.cs.cornell.edu (8.11.7-20031020/8.11.7/M-3.22) with ESMTP id k2GGcMt00294
	for <egs+summary@cs.cornell.edu>; Thu, 16 Mar 2006 11:38:22 -0500 (EST)
Received: by wproxy.gmail.com with SMTP id 68so482763wra
        for <egs+summary@cs.cornell.edu>; Thu, 16 Mar 2006 08:38:22 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=Ui+E5O5nx6HIW+7AY8DMI0VpsSO51jywvTvkzj/ZOr9RnWpcHNz2Ge1AXIYPSJW/vTB8/fSD/2GDpacXKBfgRndaqUMnMtWgbtvhS/zCAh7EIpgifjHUE2NRHs7JbYOD20V+51cJWlpYa38ZA7pVNaHTVFEwhLKBj82VBcVuYb8=
Received: by 10.54.65.15 with SMTP id n15mr1796962wra;
        Thu, 16 Mar 2006 08:38:22 -0800 (PST)
Received: by 10.54.80.9 with HTTP; Thu, 16 Mar 2006 08:38:22 -0800 (PST)
Message-ID: <6e1ca4560603160838w73883003i9008c859940c2c7a@mail.gmail.com>
Date: Thu, 16 Mar 2006 11:38:22 -0500
From: "Chiu Wah Kelvin So" <kelvinso@gmail.com>
To: egs+summary@cs.cornell.edu
Subject: Paper 15
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by sundial.cs.cornell.edu id k2GGcMt00294

The first paper, "Crowds: Anonymity for Web Transactions," present an
architecture to increase anonymity in the Internet. Crowds increase
the anonymity of the sender by sending the packet to a random member
in the crowds. Then, the member will decide to forward the packet to
random member or send it to the server. Therefore, the server has no
way to find out who is the sender of the messages (sender anonymity)
since the packet came from the sender or a random member in crowds.
The advantage of crowd is that it has low aggregate on the network.
However, an adversary can perform statistical correlation attack in
crowds, where a passive adversary listen for number of packets can
make some correlation with the packets and its original sender.
	The second paper, "P5: A Protocol for Scalable Anonymous
Communication," presents an anonymous communication over the internet.
The primary idea is to broadcast the message at a fixed rate to all
the members in the group and encrypt the receiver public key.
Therefore, everyone in the group will receive the message and only the
receiver with the private key understands the message. P5 built a
logical tree and disseminated the message from the sink to all the
other members. Each node in the tree can contain multiple users. To
send a message to a user, it first needs to send the message to the
sink, and then sink disseminates the message using the tree. To avoid
adversary to perform statistical correlation attack from sender to the
sink, P5 periodically sends out noise packet when user has no packet
to send. It also provides tradeoff between anonymity and number of
users to send to. One of the drawbacks of P5 is that it uses up too
much aggregate bandwidth since it sends every message to all the users
and dummy messages when user is idle.
The third paper, "The Dining Cryptographers Problem: Unconditional
Sender and Recipient Untraceability," presents another way for
anonymous communication. The primary idea is to use XOR. If there are
A, B, and C users and one of the user needs to communicate with the
rest of the group without other user knows about the sender, each user
first roll a number. Let's say A rolls X, B rolls Y, and C rolls Z.
Each person will XOR with the person on the left, which results A XOR
B, B XOR C, and C XOR A, and tells everyone the XOR result. With A
wants to send out message m, it will do A XOR B XOR m. Therefore, the
combining all the XOR result, we will have A XOR B XOR B XOR C XOR C
XOR A XOR m = m. The paper generalizes this idea to use in DC-nets.
However, the proposed algorithm is not scalable.
The forth paper, "Eluding Carnivores: File Sharing with Strong
Anonymity," generalize DC-net and make it scalable. Herbivore scales
by partitioning the all the users into smaller anonymous cliques. Each
clique operates on its own for efficiency. Herbivore is built on top
of Pastry. Therefore, when a node joins, it can efficiently find the
closest preexisting clique in the logical identification space.
Instead of using a random number it generates each time, each user
exchanges the random generator SEED instead. To reduce network load,
each round of information exchange is designated to a mediator in the
clique. The mediator will collect all the packets from clique members
and disseminate them. Therefore, multiple rounds can run at the same
time with different mediators.

