Received: from postoffice10.mail.cornell.edu (postoffice10.mail.cornell.edu [132.236.56.14])
	by sundial.cs.cornell.edu (8.11.7-20031020/8.11.7/M-3.22) with ESMTP id k2GFWkt05568
	for <egs+summary@cs.cornell.edu>; Thu, 16 Mar 2006 10:32:46 -0500 (EST)
Received: from orpheus3.dataserver.cornell.edu (orpheus3.dataserver.cornell.edu [128.253.161.167])
	by postoffice10.mail.cornell.edu (8.12.10/8.12.6) with ESMTP id k2GFWiNA016978;
	Thu, 16 Mar 2006 10:32:44 -0500 (EST)
Message-ID: <2125310959.1142523163742.JavaMail.webber@orpheus3.dataserver.cornell.edu>
Date: Thu, 16 Mar 2006 10:32:43 -0500 (EST)
From: Gopal Parameswaran <gp72@cornell.edu>
To: egs+summary@cs.cornell.edu
Subject: PAPER 15
Cc: Gopal Parameswaran <gp72@cornell.edu>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: uPortal WEB email client 3.0
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by sundial.cs.cornell.edu id k2GFWkt05568

Dining Cryptographers Problem:
This paper discusses a new elegant way of anonymous communication based on using more than one person's key for encrypting the message by XOR and thus when the message is being decoded the sender of the message cannot be determined. Thus each participant in the process has two kinds of secrets viz. A key that is shared with other users and the inversion that is used to change the message. This schema can be subject to disruptions but the author shows that if three requirements are met then the system would be stable to disruptions and the disrupting node would get excluded from the network. The first requirement is that the information need not be secret and should be made known to all participants and that the participants agree on it. The second requirement being in part that disrupter be unable to change their output after hearing other participants' outputs. And the third requirement is that at least some rounds can be contested without compromising the traceability of non-disrupting senders. 
	This solution to the dining cryptographers problem demonstrates that unconditional secrecy channels can be used to construct an unconditional sender-untraceability channel. It also shows that a public-key distribution system can be used to construct a computationally secure sender-untraceability channel. The approach appears able to satisfy a wide range of practical concerns.

P5:
P5 is a protocol for  anonymous communication over the Internet for peer to  peer systems. It handles all the three common subtypes of sender security, receiver security and sender-receiver security. However P5 scales the simple solution of a global broadcast channel to all users by creating a broadcast hierarchy where different levels of the hierarchy provide different levels of anonymity, at the cost of communication bandwidth and reliability. Users of the system locally select a level of anonymity and communication efficiency and can locally map themselves to a level which provides requisite performance. At any time, it is possible for individual users in to decrease anonymity by choosing a more communication efficient channel.  It is possible to choose a set of parameters that use mutually incompatible levels of bandwidth utilization and anonymity that is not supported by the system. This system also allows a trade off between bandwidth and communication efficiency, in this system only one sender-receiver pair may simultaneously communicate in this system. Thus, these systems cannot be used to implement large anonymous communication groups. 
Crowds:
Crowd provides anonymous peer to peer communication by selecting a node a t random while sending a message and then changing the message so that it seems that the message had originated from that node. This process of random selection of nodes for senders are done multiple times and this hides the original sender of the message. Thus even the crowd member nodes cannot identify the source since the source can be the random sender or the original sender. However Crowd does not make any effort to defend against denial of service attacks but those attacks are detectable when crowd members refuse to pass on messages which they have accepted. Unlike P5 the length of a message routed through the network does not grow proportionally to the number of nodes it has passed through. IN Crowd a user when he joins the network is allocated a proxy server and on the first request allocates a random path of random nodes that carry on the message for the user. At every point the server selects randomly whether to send the message to its destination or pass it to another random server. However once a path has been selected subsequent request follow the same path.
HerbivoreFS:
	This paper outlines the design of HerbivoreFS an anonymous peer to peer network for file sharing that provides strong anonymity and provides computational guarantees that even adversaries able to monitor all network traffic cannot deduce the identity of a sender or receiver beyond an anonymous clique of k peers. Scalability is achieved by partitioning the global network into smaller anonymous cliques. The lower layer herbivore protocol is based on the dining cryptographers networks and guarantees that an adversary with unrestricted wire tapping capabilities cannot deduce the provider or requester of a file without breaking the RSA code or reversing a one way hash function. It performs anonymous file lookup and spreads culpability  across a wide set of nodes that makes it intractable to mount blind legal attacks against groups.

