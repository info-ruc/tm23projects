Received: from griffon.mwsc.edu (griffon.mwsc.edu [150.200.1.1])
	by aleve.media.mit.edu (8.9.1a/8.9.1/+ALEVE) with ESMTP id PAA09581
	for <handyboard@media.mit.edu>; Mon, 17 May 1999 15:01:29 -0400 (EDT)
Received: from noynaert (noynaert.cs.mwsc.edu [150.200.40.51])
	by griffon.mwsc.edu (8.8.7/8.8.7) with SMTP id NAA01047
	for <handyboard@media.mit.edu>; Mon, 17 May 1999 13:55:51 -0500 (CDT)
Message-Id: <3.0.5.32.19990517135959.00931100@griffon.mwsc.edu>
X-Sender: noynaert@griffon.mwsc.edu
X-Mailer: QUALCOMM Windows Eudora Pro Version 3.0.5 (32)
Date: Mon, 17 May 1999 13:59:59 -0500
To: handyboard@media.mit.edu
From: Evan Noynaert <noynaert@griffon.mwsc.edu>
Subject: Re: Interactive C
In-Reply-To: <37403F47.AB500495@pacbell.net>
References: <002901be9fe4$b8f6e260$e088eed0@baileys>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"

I agree with Gary Livick, the best way to learn is by doing.
My first program on the handyboard just displayed a message on
the screen.  My second program was to plug a couple of different
resistors into the analog ports and print out the different values.

One word of advice on C books:  Stay away from C++.  You
probably want books that feature ANSI C because it is much
more like IC than C++.

When Gary Livick said that you don't need to know ANSI C, I
think he meant that you don't need to know the entire language.
I agree with that.  

However, IC and ANSI C are similar enough that books on basic 
ANSI C should be of some help.  Assuming that you use the
free version of IC at first, you can skip anything that 
has to do with the precompiler (like the #include statements).
You can also skip over the structs.  Pointers tend to be
one of the most confusing topics in C, but you can write a
lot of IC code without using pointers.  Learn about
pointers after you are familiar with the basics. 

At 09:09 AM 5/17/99 -0700, Gary Livick wrote:
>Dear Bob,
>
>I have been using IC for a couple of years, with no prior experience in
>C.  IC is a very small subset of C, as I've learned by studying ANSI C
>in the last few weeks.  The full bore language is a challenge to learn,
>although you can do it on your own with a little discipline and a lot of
>time.  However, you can learn IC much more quickly, and since you have
>no need of ANSI C, learning it would be a huge waste of time.
>
>You can easily learn IC on your own by using the available resources,
>and by getting yourself a copy of "Mobile Robots, From Inspiration to
>Implementation."  There are tons of IC examples in that book.  You will
>also need to build up a robot using your Handy Board.  You can learn a
>lot by just having motors and a couple of bump senors and light
>sensors.  The Mobile Robots book has schematics, and the circuits are
>easier to do than the hardware.
>
>Other than the Mobile Robots book, there is no other text dealing with
>IC that I am aware of.  Fred is working on a book according to his
>website, but I'm not sure of the status of that.  Dr. Martin?
>
>Good luck, and let me know if you get stuck on anything or have other
>questions.
>
>Gary Livick
>http://www.lightwaverobotics.com
>
>
>
>
--
Evan Noynaert, Department of Computer Science, Mathematics, & Physics
noynaert@griffon.mwsc.edu    phone: 816/271-4308     fax: 816/271-4574
Missouri Western State College
St. Joseph, Missouri, USA 64507


