Received: from lugnet.com (lugnet.com [209.68.63.236])
	by aleve.media.mit.edu (8.9.1a/8.9.1/+ALEVE) with ESMTP id KAA15645
	for <handyboard@media.mit.edu>; Thu, 16 Dec 1999 10:37:01 -0500 (EST)
Received: (from lugnet@localhost) by lugnet.com (8.9.1/8.6.12) id KAA12333; Thu, 16 Dec 1999 10:37:01 -0500 (EST)
X-Envelope-To: handyboard@media.mit.edu
X-Loop: lugnet.robotics.handyboard@lugnet.com
X-Message-Archive: http://www.lugnet.com/news/display.cgi?lugnet.robotics.handyboard:7218
From: "Barry Brouillette" <breeyet@aol.com>
X-Real-Life-Name: Barry Brouillette
Sender: news-gateway@lugnet.com
Errors-To: news-errors@lugnet.com
To: handyboard@media.mit.edu
Subject: Re: servo motor design
Posted-Date: Thu, 16 Dec 1999 15:36:01 GMT
Date: Thu, 16 Dec 1999 15:36:01 GMT
Organization: none
Message-Id: <FMuBC1.92v@lugnet.com>
References: <FMstvL.1KE@lugnet.com>
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Precedence: list

If you are using a Handyboard then what you probably want to do is simulate a
servo motor rather than actually go through the effort of building one that
behaves like the ones from a hobby shop.

As an example, if you had a lego motor driving a gear train you could hook up a
100K potentiometer to the setup and have it turn along with with the device you
are trying to control.  The outer pins of the potentiometer would go to +5 and
ground and the center pin would go to one of the analog input ports on the
Handyboard.  This would allow your program to know which way to turn the motor
to get it to turn to a desired location.  As you get close to the target reduce
the power to the motor so that you slow down the closer you get.

If you really want to build a servo, there are IC's on the market which do most
of the work for you.  They have inputs for a potenitiometer for feedback and
outputs for motor control.  I don't have any part numbers for you but I've seen
them in catalogs.

Barry


In lugnet.robotics.handyboard, Kah Mun writes:
>I know that designing your own servo motor is kinda stupid becoz they are
>abundant out there. but i'm in a competition which requires us to design our
>own gearbox, so i don't see a way out of it.
>
>how do i start? how do i design that feedback loop which will involve a
>potentiometer; the gear ratios, etc. please help.
>
>
>kah mun

