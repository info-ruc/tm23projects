Received: from postoffice.mail.cornell.edu (postoffice.mail.cornell.edu [132.236.56.7])
	by sundial.cs.cornell.edu (8.11.3/8.11.3/M-3.10) with ESMTP id g8O5NPh07674
	for <egs@cs.cornell.edu>; Tue, 24 Sep 2002 01:23:25 -0400 (EDT)
Received: from zoopark.cornell.edu (syr-24-58-46-186.twcny.rr.com [24.58.46.186])
	by postoffice.mail.cornell.edu (8.9.3/8.9.3) with ESMTP id BAA20723
	for <egs@cs.cornell.edu>; Tue, 24 Sep 2002 01:23:19 -0400 (EDT)
Message-Id: <5.1.0.14.2.20020924012221.01a69bc8@postoffice.mail.cornell.edu>
X-Sender: mvp9@postoffice.mail.cornell.edu (Unverified)
X-Mailer: QUALCOMM Windows Eudora Version 5.1
Date: Tue, 24 Sep 2002 01:23:16 -0400
To: egs@CS.Cornell.EDU
From: mike polyakov <mvp9@cornell.edu>
Subject: 615 PAPER 19
Mime-Version: 1.0
Content-Type: text/html; charset="us-ascii"

<html>
<font face="Times New Roman, Times">This week’s paper introduces an
effective cluster-based protocol, CEDAR.&nbsp; It’s novelty and
contribution lies is in computing good routes using only locally
available state, i.e. with minimum overhead, that also satisfy bandwidth
requirements imposed from above.&nbsp; A combination of interesting
techniques are used to accomplish this&nbsp; core graphs,
increase/decrease waves, core-limited broadcasts and local state-based
routing.&nbsp; For stable networks it is claimed to approximates
link-state algorithms, and good behavior is promised in a dynamic
network.&nbsp; The evaluation in simulation is very promising.<br>
Unlike some of the previously reviewed protocols, there are obviously no
extravagant assumptions; at first glance the approach appears very
solid.&nbsp; However, there is a nagging suspicion of some hidden
problems.&nbsp; The ideas of using local state and propagating only the
most stable and high bandwidth links is indeed valuable, and the
increase/decrease waves present a clever implementation.&nbsp; The
treatment of broadcasts as unicasts on the core graph is also
advantageous.&nbsp; But something is amiss.&nbsp; Why are the trends in
Tables I and II reversed?&nbsp; how are bandwidth requests propagated?
(this isn’t discussed at all, except to say that they are assumed to be
instantaneous!)&nbsp;&nbsp; Finally, how does the whole system perform in
a dynamic environment?&nbsp; The simulation only covers a static
environment and the case where 1 link fails.&nbsp; And even there&nbsp;
in case of link failure, which recovery mechanism is to be chosen?<br>
Aside from these questions that can surely be resolved, CEDAR seems to
fulfill many of the goals posited for MANETs in this and other
papers.&nbsp; Simulating it, and preferably implementing CEDAR on larger
networks, with mobility would be the first extension of presented
work.&nbsp; Extending QoS to other metrics, delay reliability, etc, would
be another.&nbsp; How useful are various caching optimizations and what
improvements could they provide?&nbsp; Finally, what actual adjustments
need to be made for well-behaved scaling, if any? <br>
</font></html>

