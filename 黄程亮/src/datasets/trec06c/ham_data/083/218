Received: from exchange.cs.cornell.edu (exchange.cs.cornell.edu [128.84.97.8])
	by sundial.cs.cornell.edu (8.11.3/8.11.3/M-3.10) with ESMTP id g8O3BSh13660
	for <egs@popsrv.cs.cornell.edu>; Mon, 23 Sep 2002 23:11:29 -0400 (EDT)
content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
X-MimeOLE: Produced By Microsoft Exchange V6.0.5762.3
Subject: 615 PAPER 19
Date: Mon, 23 Sep 2002 23:11:28 -0400
Message-ID: <47BCBC2A65D1D5478176F5615EA7976D1507B8@opus.cs.cornell.edu>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: 615 PAPER 19
Thread-Index: AcJjeBMvzECNY63OSb+k1cJbuxAdOQ==
From: "Syed Shafat Zaman" <shafat@CS.Cornell.EDU>
To: "Emin Gun Sirer" <egs@CS.Cornell.EDU>
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by sundial.cs.cornell.edu id g8O3BSh13660

This paper presents a cluster-based routing algorithm called CEDAR, for mobile ad hoc
wireless networks. It is tailored, more specifically for QoS routing, and regards bandwidth
of links as the most important parameter. The network model comprises of clusters of nodes,
each headed by a core node. Path creation and maintenance are carried out by these core
nodes, while other nodes only maintain localized information of their neighbors.

One aspect of CEDAR that I found quite interesting was the implementation of increase and
decrease waves. The difference in the propagation speeds of these two types of waves is a
clever idea of ensuring that stale information do not travel too far away from the origin.
The paper, however, could talk more about the function that decides on the TTL value of link
updates and study its performance in the simulation.

The basic QoS routing algorithm is quite simple and straightforward. It minimizes the
overhead cost of sharing link-state information. However, the paper does not address the
load factor of core nodes and how it affects the network once a core node fails. Power
consumption in these core nodes could also be considerably higher than the rest (according
to last week's papers), and failure might be very common in reality. Another point noted in
the simulation was the maximum number of nodes used - 30. This makes it harder to predict
the actual performance of CEDAR in a larger setting. It also undermines the strong
characteristics, like robustness, CEDAR displays through the simulations.

