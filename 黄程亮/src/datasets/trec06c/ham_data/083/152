Received: from postoffice.mail.cornell.edu (postoffice.mail.cornell.edu [132.236.56.7])
	by sundial.cs.cornell.edu (8.11.3/8.11.3/M-3.10) with ESMTP id g8J4MOh17061
	for <egs@cs.cornell.edu>; Thu, 19 Sep 2002 00:22:24 -0400 (EDT)
Received: from sanya (r105361.resnet.cornell.edu [128.253.240.52])
	by postoffice.mail.cornell.edu (8.9.3/8.9.3) with SMTP id AAA20619
	for <egs@cs.cornell.edu>; Thu, 19 Sep 2002 00:22:24 -0400 (EDT)
Message-ID: <000d01c25f94$2775df30$34f0fd80@sanya>
From: "Aleksandr Gilshteyn" <ag75@cornell.edu>
To: <egs@CS.Cornell.EDU>
Subject: 615 PAPER 13
Date: Thu, 19 Sep 2002 00:22:23 -0400
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.50.4807.1700
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4910.0300

In this paper we were presented with PARO, a power-aware routing protocol
for wireless ad hoc networks. The goal of PARO is to minimize the
transmission power
consumed in the network. In order to do this, PARO tries to find a route for
which the transmission power required is minimimal. It tries to do this
using as little transmission power as possible. Finally, PARO is a kind of
protocol that discovers routes on-demand and on a node-to-node basis.

The algorithm makes some pretty big assumptions. First, PARO requires that
nodes be able to dynamically adjust the transmission power used to
communicate with
other nodes. Second, PARO assumes that the transmission power required to
transmit
a packet between nodes A and B is similar to the transmission power required
to transmit a packet between nodes B and A, which a lot of times is not the
case. Finally, the protocol assumes that all nodes are within direct
transmission range of each other (though it can perform power optimization
as a layer 2.5 if this is not the case).

PARO optimizes routes one step at a time, thus it requires several
iterations to converge to an optimum route. Additionally, the protocol does
not guarantee that the final route is the route that will need the minimum
transmission power. On the other hand, during later iterations reductions in
transmission power are much smaller than the ones obtained during the first
few iterations. Thus, we obtain most of the benefits fast even with the
caveats above.

The simulations ran to test the protocol were not very impressive. The
simulation for a network with 10/30/100 static nodes lasted for only 100
seconds with 10 flows transmitting 512 bytes packets every 3 seconds. This
is not typical of a real network and it's hard to conclude anything about
scalability and about how this protocol would perform on a real network.

