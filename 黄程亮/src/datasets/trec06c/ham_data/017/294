Received: from imo30.mx.aol.com (imo30.mx.aol.com [198.81.17.74])
	by aleve.media.mit.edu (8.8.7/ML970927) with ESMTP id NAA24940
	for <handyboard@media.mit.edu>; Sat, 6 Jun 1998 13:40:25 -0400 (EDT)
From: GJZ@aol.com
Received: from GJZ@aol.com
	by imo30.mx.aol.com (IMOv14_b1.1) id STXWa29472
	for <handyboard@media.mit.edu>; Sat, 6 Jun 1998 13:39:42 -0400 (EDT)
Message-Id: <7483b4f7.35797edf@aol.com>
Date: Sat, 6 Jun 1998 13:39:42 EDT
To: handyboard@media.mit.edu
Mime-Version: 1.0
Subject: serial communications
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Mailer: AOL 3.0 for Windows 95 sub 64

i have been looking thru the libraries that people have posted on the web,
particularly the ones that allow serial communication.  i am not sure how the
system works, but there are numerous routines which turn handshake on and off,
as well as routines which will time out if there is no response from the
receiving device.  i am not sure what handshake is, i am guessing that it is a
"ready check".  i am wondering how the protocol for sending data is set up,
and if there is a way to access the bare bones I/O that the HC11 comes with.
is the difference extra software procedures that the HB uses to insure proper
data transmission?  is there any way that one can program the HB to use simple
start/stopbit protocol to receive data.  in particular, i am interested in
interfacing the HB with a GPS receiver, which i know are designed to
communicate with a microcontroller.  what type of transfer protocol is used in
this application?  if anyone has info on libraries that allow this kind of
communication, please let me know.  or would this have to be done thru
assembly language?  thanks for your help.

Justin D. Gullotta.. , Engineer,
Rensselaer Polytechnic Institute.

