Received: from postoffice.mail.cornell.edu (postoffice.mail.cornell.edu [132.236.56.7])
	by sundial.cs.cornell.edu (8.11.3/8.11.3/M-3.7) with ESMTP id fB4Gpf604326
	for <egs@CS.Cornell.EDU>; Tue, 4 Dec 2001 11:51:41 -0500 (EST)
Received: from mars (syr-66-24-28-66.twcny.rr.com [66.24.28.66])
	by postoffice.mail.cornell.edu (8.9.3/8.9.3) with ESMTP id LAA19848
	for <egs@CS.Cornell.EDU>; Tue, 4 Dec 2001 11:51:37 -0500 (EST)
From: "hao ming" <mh97@cornell.edu>
To: "'Emin Gun Sirer'" <egs@CS.Cornell.EDU>
Subject: 615 PAPER 68
Date: Tue, 4 Dec 2001 11:51:07 -0500
Message-ID: <000001c17ce3$dfba8d50$6801a8c0@mars>
MIME-Version: 1.0
X-Security: MIME headers sanitized on sundial.cs.cornell.edu
	See http://www.impsec.org/email-tools/procmail-security.html
	for details. $Revision: 1.131 $Date: 2001-11-23 19:59:32-08 
X-Security: The postmaster has not enabled quarantine of poisoned messages.
Content-Type: multipart/alternative;
	boundary="----=_NextPart_000_0001_01C17CB9.F6E48550"
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.2627
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000

This is a multi-part message in MIME format.

------=_NextPart_000_0001_01C17CB9.F6E48550
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit

 
Tapestry: An Infrastructure for Fault tolerant Wide-area 
Location and Routing
Ben Y. Zhao, John Kubiatowicz, and Anthony D. Joseph
 
the paper comes from the same point as the last 4 papers: 
how to distribute and retrieve the information world-widely. 
the development of Internet makes this possible. And some 
systems has been set up like Past, Freenet. 
 
this paper outlines 5 basic requirements needed by this kind 
of  system.
 
1. load balance
2. scalability
3. self-organization
4. fault-torlerance
5. decentralized 
 
 
the routing method is similar to that of Pastry. first, a SHA-1 
hash is used to evenly distribute the information among the 
name space. Then a Plaxton routing routing method is used which 
guarantee the LogN routing step.
 
the main new features Tapetry can be seen from its difference 
from Plaxton from which Tapestry inherits many things. 
 
1. more flexible mechanism to select the replica.
2. using backup neighbors and hello message to detect and 
   bypassing fault nodes. a second chance is given to the fault 
   neighbors to reduce reinsertion overhead.
 
3. multiple root for object to avoid single point failure
4. refreshing of pointers along the route to the root.
5. nodes can join and depart dynamically. new nodes get their 
   neighbor maps  by routing to its own ID from a known gateway 
   and retrieve the neighbor map one level from each node along 
   the route. further optimization  is carried out.
 
comments:
 in comparison with Pastry, we can find some drawback of Tapestry. 
Pastry cleverly use prefix insdead of suffix in order to taking 
Distance into account. though Pastry also retrieve the routing info 
from nodes along the route, it has much less overhead because it 
already takes locality into account and make distance optimization 
not unnecessary.
 
 
-ming
 

------=_NextPart_000_0001_01C17CB9.F6E48550
Content-Type: text/html; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable

<html xmlns:o=3D"urn:schemas-microsoft-com:office:office" =
xmlns:w=3D"urn:schemas-microsoft-com:office:word" =
xmlns=3D"http://www.w3.org/TR/REC-html40">

<head>
<DEFANGED_META HTTP-EQUIV=3D"Content-Type" CONTENT=3D"text/html; =
charset=3Dus-ascii">


<DEFANGED_meta name=3DProgId content=3DWord.Document>
<DEFANGED_meta name=3DGenerator content=3D"Microsoft Word 10">
<DEFANGED_meta name=3DOriginator content=3D"Microsoft Word 10">
<DEFANGED_link rel=3DFile-List href=3D"cid:filelist.xml@01C17CB9.F56E3900">
<!--[if gte mso 9]><xml>
 <o:OfficeDocumentSettings>
  <o:DoNotRelyOnCSS/>
 </o:OfficeDocumentSettings>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Normal</w:View>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DocumentKind>DocumentEmail</w:DocumentKind>
  <w:EnvelopeVis/>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
 <!-- <DEFANGED_STYLE>
<!--
 /* Font Definitions */
 @font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:SimSun;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:SimSun;}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:SimSun;}
span.EmailStyle17
	{mso-style-type:personal;
	mso-style-noshow:yes;
	mso-ansi-font-size:10.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-ascii-font-family:Arial;
	mso-hansi-font-family:Arial;
	mso-bidi-font-family:Arial;
	color:windowtext;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 77.95pt 1.0in 77.95pt;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
 --> </DEFANGED_STYLE>
<!--[if gte mso 10]>
 <!-- <DEFANGED_STYLE>
 /* Style Definitions */=20
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
 --> </DEFANGED_STYLE>
<![endif]-->
</head>

<body lang=3DEN-US link=3Dblue vlink=3Dpurple =
style=3D'tab-interval:.5in'>

<div class=3DSection1>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<pre><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:10.0pt'>Tapestry: An Infrastructure for Fault =
tolerant Wide-area <o:p></o:p></span></font></pre><pre><font
size=3D2 face=3D"Courier New"><span DEFANGED_STYLE=3D'font-size:10.0pt'>Location =
and Routing<o:p></o:p></span></font></pre><pre><font
size=3D2 face=3D"Courier New"><span DEFANGED_STYLE=3D'font-size:10.0pt'>Ben Y. =
Zhao, John <span
class=3DSpellE>Kubiatowicz</span>, and Anthony D. =
Joseph<o:p></o:p></span></font></pre>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>the</span></font></span> paper comes from the =
same
point as the last 4 papers: <o:p></o:p></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>how</span></font></span> to distribute and =
retrieve
the information world-widely. <o:p></o:p></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>the</span></font></span> development of =
Internet makes
this possible. And some <o:p></o:p></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>systems</span></font></span> has been set up =
like
Past, <span class=3DSpellE>Freenet</span>. <o:p></o:p></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>this</span></font></span> paper outlines 5 =
basic
requirements needed by this kind <o:p></o:p></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>of <span =
style=3D'mso-spacerun:yes'>&nbsp;</span>system</span></font></span>.<o:p>=
</o:p></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'>1. <span class=3DGramE>load</span> =
balance<o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'>2. <span =
class=3DGramE>scalability</span><o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'>3. <span =
class=3DGramE>self-organization</span><o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'>4. fault-<span =
class=3DSpellE>torlerance</span><o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'>5. <span class=3DGramE>decentralized</span> =
<o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>the</span></font></span> routing method is =
similar to
that of Pastry. <span class=3DGramE>first</span>, a SHA-1 =
<o:p></o:p></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>hash</span></font></span> is used to evenly =
distribute
the information among the <o:p></o:p></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>name</span></font></span> space. Then a <span
class=3DSpellE>Plaxton</span> routing <span =
class=3DSpellE>routing</span> method is
used which <o:p></o:p></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>guarantee</span></font></span> the <span =
class=3DSpellE>LogN</span>
routing step.<o:p></o:p></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>the</span></font></span> main new features =
<span
class=3DSpellE>Tapetry</span> can be seen from its difference =
<o:p></o:p></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>from</span></font></span> <span =
class=3DSpellE>Plaxton</span>
from which Tapestry inherits many things. <o:p></o:p></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'>1. <span class=3DGramE>more</span> flexible mechanism to select =
the
replica.<o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'>2. <span class=3DGramE>using</span> backup neighbors and hello =
message to
detect and <o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><span DEFANGED_STYLE=3D'mso-spacerun:yes'>&nbsp;&nbsp; </span><span =
class=3DGramE>bypassing</span>
fault nodes. <span class=3DGramE>a</span> second chance is given to the =
fault <o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><span DEFANGED_STYLE=3D'mso-spacerun:yes'>&nbsp;&nbsp; </span><span =
class=3DGramE>neighbors</span>
to reduce reinsertion overhead.<o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'>3. <span class=3DGramE>multiple</span> root for object to avoid =
single
point failure<o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'>4. <span class=3DGramE>refreshing</span> of pointers along the =
route to
the root.<o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'>5. <span class=3DGramE>nodes</span> can join and depart =
dynamically. <span
class=3DGramE>new</span> nodes get their <o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><span DEFANGED_STYLE=3D'mso-spacerun:yes'>&nbsp;&nbsp; </span><span =
class=3DGramE>neighbor</span>
maps<span DEFANGED_STYLE=3D'mso-spacerun:yes'>&nbsp; </span>by routing to its own =
ID from
a known gateway <o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><span DEFANGED_STYLE=3D'mso-spacerun:yes'>&nbsp;&nbsp; </span><span =
class=3DGramE>and</span>
retrieve the neighbor map one level from each node along =
<o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><span DEFANGED_STYLE=3D'mso-spacerun:yes'>&nbsp;&nbsp; </span><span =
class=3DGramE>the</span>
route. <span class=3DGramE>further</span> optimization<span
style=3D'mso-spacerun:yes'>&nbsp; </span>is carried =
out.<o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>comments</span></font></span>:<o:p></o:p></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><span DEFANGED_STYLE=3D'mso-spacerun:yes'>&nbsp;</span><span =
class=3DGramE>in</span>
comparison with Pastry, we can find some drawback of Tapestry. =
<o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'>Pastry cleverly use prefix <span class=3DSpellE>insdead</span> =
of suffix
in order to taking <o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'>Distance into account. <span class=3DGramE>though</span> Pastry =
also
retrieve the routing info <o:p></o:p></span></font></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>from</span></font></span> nodes along the =
route, it
has much less overhead because it <o:p></o:p></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>already</span></font></span> takes locality =
into account
and make distance optimization <o:p></o:p></p>

<p class=3DMsoPlainText><span class=3DGramE><font size=3D2 =
face=3D"Courier New"><span
style=3D'font-size:10.0pt'>not</span></font></span> =
unnecessary.<o:p></o:p></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'>-<span class=3DSpellE><span =
class=3DGramE>ming</span></span><o:p></o:p></span></font></p>

<p class=3DMsoPlainText><font size=3D2 face=3D"Courier New"><span =
style=3D'font-size:
10.0pt'><o:p>&nbsp;</o:p></span></font></p>

</div>

</body>

</html>

------=_NextPart_000_0001_01C17CB9.F6E48550--

