Received: from disney.csl.cornell.edu (disney.csl.cornell.edu [132.236.71.87])
	by sundial.cs.cornell.edu (8.11.3/8.11.3/M-3.7) with ESMTP id fB4I8l617606
	for <egs@cs.cornell.edu>; Tue, 4 Dec 2001 13:08:47 -0500 (EST)
Received: from localhost (teifel@localhost)
	by disney.csl.cornell.edu (8.11.3/8.9.2) with ESMTP id fB4I8f323381
	for <egs@cs.cornell.edu>; Tue, 4 Dec 2001 13:08:41 -0500 (EST)
	(envelope-from teifel@disney.csl.cornell.edu)
X-Authentication-Warning: disney.csl.cornell.edu: teifel owned process doing -bs
Date: Tue, 4 Dec 2001 13:08:41 -0500 (EST)
From: "John R. Teifel" <teifel@csl.cornell.edu>
To: <egs@CS.Cornell.EDU>
Subject: 615 PAPER 68
Message-ID: <20011204115907.C17542-100000@disney.csl.cornell.edu>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

Tapestry:

Tapestry is an overlay location and routing infrastructure that
provides location-independent routing of messages directly to the closest
copy of an object or service using only point-to-point links and without
centralized resources.  Routing and directory information is maintained in
a soft state and is easily repairable.  This infrastructure is
self-administering, fault-tolerant, and resilient under load.

Tapestry builds on much of the ideas from Plaxton, et al.  including
simple fault handling, scalability, locality exploitation, and
proportional route distance.  Tapestry then attempts to solve the problems
associated with Plaxton, naming global knowledge, root node vulnerability,
and lack of ability to adapt.  One of Tapestry's main contribution is
dynamic algorithms that support dynamic operations in a decentralized
manner.

The simulations used to evaluate Tapestry were quite extensive, utilizing
both artificial and real network data. They showed that the Tapestry
system, with its soft state information, can provide self-administration,
robustness, scalability, dynamic adapation, and graceful degration in the
presence of failures and high load, all while avoiding the problems of the
Plaxton system.  What is left out of this paper is how Tapestry compares
to Pastry, Chord, CAN, etc.  This makes this paper somewhat difficult to
evaluate in terms of raw performance and overhead, but I think it provides
enough motivating ideas on these types of distriubted systems to make it
valuable literature.



