Received: by cheltenham.cs.arizona.edu; Thu, 8 Dec 1994 20:00:00 MST
To: icon-group-l@cs.arizona.edu
Date: Fri, 9 Dec 1994 00:58:42 GMT
From: jfriedl@nff.ncl.omron.co.jp (Jeffrey Friedl)
Message-Id: <JFRIEDL.94Dec9095842@shibuya.nff.ncl.omron.co.jp>
Organization: Omron Corporation, Kyoto Japan
Sender: icon-group-request@cs.arizona.edu
References: <1994Dec7.221649.10939@cs.sfu.ca>
Reply-To: jfriedl@nff.ncl.omron.co.jp
Subject: Re: [Q] Algorithm for Regexp Subsumption
Errors-To: icon-group-errors@cs.arizona.edu

vorbeck@cs.sfu.ca (Martin Vorbeck) writes:
|> are there any algorithms out there for checking whether a regular
|> expression subsumes another one, ie L(E1) is a subset of L(E2)? I have a
|> "brute-force" solution along these lines:
|> 
|> 1. Compute equivalent finite automatas A1 (resp A2) for E1 (resp E2).

Make sure you keep the context of your problem (whetever that might be)
in mind when doing this. For example, the two regexes
	(a|a long regex)
	a( long regex)?

(translate to your favorite flavor) are exactly equivalent in a true DFA
engines (i.e. emacs), but not equivalent in some others (perl, python,
etc.). FWIW, POSIX says they're the same. And FWIW, it's my opinion that
being different is much more powerful.

|> Please Email any replies to
|> 	   vorbeck@cs.sfu.ca
|> as I don't usually read these newsgroups.

Now might be a good time to start.

	*jeffrey*
-------------------------------------------------------------------------
Jeffrey E.F. Friedl <jfriedl@omron.co.jp>  Omron Corporation, Kyoto Japan
See my Jap/Eng dictionary at http://www.omron.co.jp/cgi-bin/j-e
                          or http://www.cs.cmu.edu:8001/cgi-bin/j-e



