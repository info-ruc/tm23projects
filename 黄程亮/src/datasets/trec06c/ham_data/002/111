Received: by cheltenham.cs.arizona.edu; Fri, 16 Dec 1994 09:32:02 MST
To: icon-group-l@cs.arizona.edu
Date: Fri, 16 Dec 1994 15:51:50 GMT
From: dkuhlman@netcom.com (G. David Kuhlman)
Message-Id: <dkuhlmanD0wuqE.I5w@netcom.com>
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
Sender: icon-group-request@cs.arizona.edu
Subject: Backtracking in Icon
Errors-To: icon-group-errors@cs.arizona.edu

An article in the latest "Icon Analyst" reported frequency of use
of various control structures in Icon programs, but backtracking
was mentioned only briefly.  When I first learned about
backtracking and goal seeking behavior in Icon I thought,
"Wow.  Now I can have backtracking like I had in Prolog, AND
I don't have to try to write loops and if statements in
screwy ways."

But now, in spite of the fact that I have a language
with a strong backtracking mechanism, I find that I
don't use it much, except of course, for trivial
constructs like:

    (checkValid(x) | write("error"))

which I feel I have to write instead of an
'if' statement so that I can feel like a cool Icon
programmer.

Anyway, I'd be interested to know if others use backtracking
more heavily, or whether maybe this is just a "neat" but
not so useful feature of Icon.

Or, could it be that the fact that Icon does not have logical
variables, as Prolog does, make backtracking and goal seeking
evaluation less usable?

-- 
----------------------
Dave Kuhlman
Reify, Redwood City, CA
Internet:   dkuhlman@netcom.com
----------------------

