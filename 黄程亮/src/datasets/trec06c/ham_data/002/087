Received: by cheltenham.cs.arizona.edu; Wed, 7 Dec 1994 17:07:13 MST
To: icon-group-l@cs.arizona.edu
Date: Wed, 7 Dec 1994 22:16:49 GMT
From: vorbeck@cs.sfu.ca (Martin Vorbeck)
Message-Id: <1994Dec7.221649.10939@cs.sfu.ca>
Organization: Faculty of Applied Science, Simon Fraser University
Sender: icon-group-request@cs.arizona.edu
Subject: [Q] Algorithm for Regexp Subsumption
Errors-To: icon-group-errors@cs.arizona.edu

Hi,

  are there any algorithms out there for checking whether a regular
expression subsumes another one, ie L(E1) is a subset of L(E2)? I have a
"brute-force" solution along these lines:

1. Compute equivalent finite automatas A1 (resp A2) for E1 (resp E2).
2. Compute A3 = A1 intersected with the complement of A2.
3. Test L(A3) = empty  ==>  E2 subsumes E1.

But I wonder if this couldn't be done directly on the regular
expressions E1 and E2? As an aside note, just a reminder that regexp
inequivalence is NP-Hard (Garey & Johnson), so I don't expect anything
extremely efficient. 

  Any help would be very much appreciated.

Please Email any replies to
	vorbeck@cs.sfu.ca
as I don't usually read these newsgroups.

Thanks !

-- Martin Vorbeck



